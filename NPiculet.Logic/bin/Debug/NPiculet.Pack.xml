<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NPiculet.Pack</name>
    </assembly>
    <members>
        <member name="T:NPiculet.Logic.Data.SysUserInfoDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.DataDao.ResolveExecuteObject(NPiculet.Data.IDbHelper,NPiculet.Data.IExecuteObject)">
            <summary>
            解析执行对象。
            </summary>
            <param name="db">数据库对象</param>
            <param name="e">执行对象</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DataDao.Delete``1(``0)">
            <summary>
            删除多个实体对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DataDao.InsertIdentity``1(``0)">
            <summary>
            新增数据后获取自增ID
            </summary>
            <typeparam name="T"></typeparam>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DataDao.InsertList``1(System.Collections.Generic.List{``0})">
            <summary>
            新增多个实体对象。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="models"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DataDao.UpdateList``1(System.Collections.Generic.List{``0})">
            <summary>
            更新多个实体对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="models"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DataDao.DeleteList``1(System.Collections.Generic.List{``0})">
            <summary>
            删除多个实体对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="models"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysUserInfoDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysUserInfoDao.Insert(NPiculet.Logic.Data.SysUserInfo)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysUserInfoDao.Update(NPiculet.Logic.Data.SysUserInfo,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysUserInfoDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysUserInfoDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysUserInfoDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysUserInfoDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysUserInfoDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysUserInfoDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysUserInfoDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Data.SysConfigDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.SysConfigDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysConfigDao.Insert(NPiculet.Logic.Data.SysConfig)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysConfigDao.Update(NPiculet.Logic.Data.SysConfig,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysConfigDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysConfigDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysConfigDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysConfigDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysConfigDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysConfigDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysConfigDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Data.SysLinkUserRoleDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.SysLinkUserRoleDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysLinkUserRoleDao.Insert(NPiculet.Logic.Data.SysLinkUserRole)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysLinkUserRoleDao.Update(NPiculet.Logic.Data.SysLinkUserRole,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysLinkUserRoleDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysLinkUserRoleDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysLinkUserRoleDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysLinkUserRoleDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysLinkUserRoleDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysLinkUserRoleDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysLinkUserRoleDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Business.SysConfigBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.SysConfigBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysConfigBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysConfigBus.Insert(NPiculet.Logic.Data.SysConfig)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysConfigBus.InsertIdentity(NPiculet.Logic.Data.SysConfig)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysConfigBus.Update(NPiculet.Logic.Data.SysConfig,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysConfigBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysConfigBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysConfigBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysConfigBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysConfigBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysConfigBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysConfigBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Business.SysAuthorizationBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAuthorizationBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAuthorizationBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAuthorizationBus.Insert(NPiculet.Logic.Data.SysAuthorization)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAuthorizationBus.InsertIdentity(NPiculet.Logic.Data.SysAuthorization)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAuthorizationBus.Update(NPiculet.Logic.Data.SysAuthorization,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAuthorizationBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAuthorizationBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAuthorizationBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAuthorizationBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAuthorizationBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAuthorizationBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAuthorizationBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAuthorizationBus.GetAuthList(System.String,System.String)">
            <summary>
            获取授权列表
            </summary>
            <param name="targetType"></param>
            <param name="targetId"></param>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAuthorizationBus.GetFullAuthList(System.String,System.String)">
            <summary>
            获取全部授权列表
            </summary>
            <param name="targetType"></param>
            <param name="targetId"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAuthorizationBus.UpdateAuthList(System.Collections.Generic.List{NPiculet.Logic.Data.SysAuthorization},System.String,System.String)">
            <summary>
            更新授权列表
            </summary>
            <param name="authList"></param>
            <param name="targetType"></param>
            <param name="targetId"></param>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAuthorizationBus.GetRoleLinkUser(System.Int32)">
            <summary>
            获取角色链接的用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAuthorizationBus.GetUserLinkRole(System.Int32)">
            <summary>
            获取用户链接的角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAuthorizationBus.GetOrgLinkUser(System.Int32)">
            <summary>
            获取组织链接的用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAuthorizationBus.GetUserLinkOrg(System.Int32)">
            <summary>
            获取用户链接的组织
            </summary>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Business.SysAdminInfoBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAdminInfoBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAdminInfoBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAdminInfoBus.Insert(NPiculet.Logic.Data.SysAdminInfo)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAdminInfoBus.InsertIdentity(NPiculet.Logic.Data.SysAdminInfo)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAdminInfoBus.Update(NPiculet.Logic.Data.SysAdminInfo,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAdminInfoBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAdminInfoBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAdminInfoBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAdminInfoBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAdminInfoBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAdminInfoBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysAdminInfoBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Business.DictGroupBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.DictGroupBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictGroupBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictGroupBus.Insert(NPiculet.Logic.Data.DictGroup)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictGroupBus.InsertIdentity(NPiculet.Logic.Data.DictGroup)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictGroupBus.Update(NPiculet.Logic.Data.DictGroup,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictGroupBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictGroupBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictGroupBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictGroupBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictGroupBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictGroupBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictGroupBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Business.SysUserDataBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserDataBus.GetUserData(System.String)">
            <summary>
            根据用户帐号获取用户资料
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserDataBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserDataBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserDataBus.Insert(NPiculet.Logic.Data.SysUserData)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserDataBus.InsertIdentity(NPiculet.Logic.Data.SysUserData)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserDataBus.Update(NPiculet.Logic.Data.SysUserData,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserDataBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserDataBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserDataBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserDataBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserDataBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserDataBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserDataBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.IExceptionModule.ProcessException(System.String,System.Exception)">
            <summary>
            统一处理异常。
            </summary>
            <param name="msg">附加信息</param>
            <param name="ex">异常</param>
        </member>
        <member name="M:NPiculet.Logic.Sys.IAuthModule.UserExist(System.String)">
            <summary>
            用户帐号是否存在。
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.IAuthModule.UserExist(System.String,System.String)">
            <summary>
            用户账号是否存在。
            </summary>
            <param name="account"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.IAuthModule.GetUserInfo(System.String)">
            <summary>
            获取用户信息。
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.IAuthModule.GetUserData(System.String)">
            <summary>
            获取用户资料
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.IAuthModule.RoleExist(System.String)">
            <summary>
            角色是否存在。
            </summary>
            <param name="roleName"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.IAuthModule.GetRoleInfo(System.String)">
            <summary>
            获取角色信息。
            </summary>
            <param name="roleName"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.IAuthModule.UpdateUserInfo(NPiculet.Logic.Data.SysUserInfo)">
            <summary>
            更新用户信息
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:NPiculet.Logic.Sys.IAuthModule.UpdateUserData(NPiculet.Logic.Data.SysUserData)">
            <summary>
            更新用户资料
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:NPiculet.Logic.Data.SysLinkUserRole">
            <summary>
            
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.IModel.ClearPropertyChange">
            <summary>
            清除实体类属性改变记录。
            </summary>
        </member>
        <member name="E:NPiculet.Logic.Data.IModel.PropertyChanging">
            <summary>
            属性正在改变事件。
            </summary>
        </member>
        <member name="E:NPiculet.Logic.Data.IModel.PropertyChanged">
            <summary>
            属性已改变事件。
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.IModel.PropertyChangedList">
            <summary>
            实体类属性改变记录列表。
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.IModel.TableName">
            <summary>
            实体类数据表名称。
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.IModel.PrimeKey">
            <summary>
            实体类主键。
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.ModelBase.ClearPropertyChange">
            <summary>
            清除属性变化记录
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.ModelBase.TableName">
            <summary>
            实体类数据表名称。
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.ModelBase.PrimeKey">
            <summary>
            实体类主键。
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysLinkUserRole.RoleId">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysLinkUserRole.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysLinkUserRole.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.SysExceptionLog">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysExceptionLog.Date">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysExceptionLog.Exception">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysExceptionLog.Message">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysExceptionLog.ClassName">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysExceptionLog.Level">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysExceptionLog.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysExceptionLog.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.SysActionDetailDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.SysActionDetailDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysActionDetailDao.Insert(NPiculet.Logic.Data.SysActionDetail)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysActionDetailDao.Update(NPiculet.Logic.Data.SysActionDetail,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysActionDetailDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysActionDetailDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysActionDetailDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysActionDetailDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysActionDetailDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysActionDetailDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysActionDetailDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Data.InfoContentPageDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.InfoContentPageDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.InfoContentPageDao.Insert(NPiculet.Logic.Data.InfoContentPage)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.InfoContentPageDao.Update(NPiculet.Logic.Data.InfoContentPage,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.InfoContentPageDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.InfoContentPageDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.InfoContentPageDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.InfoContentPageDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.InfoContentPageDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.InfoContentPageDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.InfoContentPageDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Business.InfoContentPageBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.Insert(NPiculet.Logic.Data.InfoContentPage)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.InsertIdentity(NPiculet.Logic.Data.InfoContentPage)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.Update(NPiculet.Logic.Data.InfoContentPage,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.GetPostList(System.Int32,System.Int32)">
            <summary>
            获取首页公告列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.GetHelpContent(System.String)">
            <summary>
            获取帮助内容
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.GetPostInfo(System.Int32)">
            <summary>
            获取公告
            </summary>
            <param name="postId"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.GetContentList(System.Int32,System.Int32,System.String)">
            <summary>
            获取内容列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.GetContentList(System.String)">
            <summary>
            获取内容列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.GetContent(System.Int32)">
            <summary>
            获取内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.GetContent(System.String)">
            <summary>
            获取内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.GetContent(System.Int32,System.String)">
            <summary>
            获取内容
            </summary>
            <param name="dataId"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoContentPageBus.GetRecordCount(System.String)">
            <summary>
            获取列表统计
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.AuthManager.UserExist(System.String)">
            <summary>
            用户是否已存在
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.AuthManager.UserExist(System.String,System.String)">
            <summary>
            用户是否已存在
            </summary>
            <param name="account"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.AuthManager.GetUserInfo(System.String)">
            <summary>
            获取用户信息
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.AuthManager.GetUserData(System.String)">
            <summary>
            获取用户资料
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.AuthManager.RoleExist(System.String)">
            <summary>
            角色是否已存在
            </summary>
            <param name="roleName"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.AuthManager.GetRoleInfo(System.String)">
            <summary>
            获取角色信息
            </summary>
            <param name="roleName"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.AuthManager.UpdateUserInfo(NPiculet.Logic.Data.SysUserInfo)">
            <summary>
            更新用户信息
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:NPiculet.Logic.Sys.AuthManager.UpdateUserData(NPiculet.Logic.Data.SysUserData)">
            <summary>
            更新用户资料
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:NPiculet.Logic.Info.NoticeType">
            <summary>
            通知处理模式
            </summary>
        </member>
        <member name="F:NPiculet.Logic.Info.NoticeType.View">
            <summary>
            查看后删除通知
            </summary>
        </member>
        <member name="F:NPiculet.Logic.Info.NoticeType.Process">
            <summary>
            处理后删除通知
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Info.NoticeSource">
            <summary>
            通知来源模块
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Info.INoticeModule.SendNotice(NPiculet.Logic.Data.NoticeInfo,System.String[])">
            <summary>
            发送通知
            </summary>
            <param name="notice">通知内容</param>
            <param name="receiver">接收者ID集合</param>
        </member>
        <member name="M:NPiculet.Logic.Info.INoticeModule.FinishNotice(System.String,System.String)">
            <summary>
            结束通知
            </summary>
            <param name="noticeId"></param>
            <param name="userId"></param>
        </member>
        <member name="M:NPiculet.Logic.Info.INoticeModule.DeleteNotice(System.String,System.String)">
            <summary>
            删除通知
            </summary>
            <param name="noticeId"></param>
            <param name="userId"></param>
        </member>
        <member name="T:NPiculet.Logic.Data.InfoGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoGroup.IsEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoGroup.OrderBy">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoGroup.Comment">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoGroup.IsShow">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoGroup.IsExternal">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoGroup.Url">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoGroup.Icon">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoGroup.Path">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoGroup.Layer">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoGroup.ParentId">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoGroup.GroupType">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoGroup.GroupName">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoGroup.GroupCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoGroup.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.SysLinkUserOrgDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.SysLinkUserOrgDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysLinkUserOrgDao.Insert(NPiculet.Logic.Data.SysLinkUserOrg)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysLinkUserOrgDao.Update(NPiculet.Logic.Data.SysLinkUserOrg,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysLinkUserOrgDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysLinkUserOrgDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysLinkUserOrgDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysLinkUserOrgDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysLinkUserOrgDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysLinkUserOrgDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysLinkUserOrgDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Data.SysAuthorizationDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAuthorizationDao.GetAuthList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="targetType"></param>
            <param name="targetId"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAuthorizationDao.GetFullAuthList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="targetType"></param>
            <param name="targetId"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAuthorizationDao.GetRoleLinkUser(System.Int32)">
            <summary>
            获取角色链接的用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAuthorizationDao.GetUserLinkRole(System.Int32)">
            <summary>
            获取用户链接的角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAuthorizationDao.GetOrgLinkUser(System.Int32)">
            <summary>
            获取组织链接的用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAuthorizationDao.GetUserLinkOrg(System.Int32)">
            <summary>
            获取用户链接的组织
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAuthorizationDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAuthorizationDao.Insert(NPiculet.Logic.Data.SysAuthorization)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAuthorizationDao.Update(NPiculet.Logic.Data.SysAuthorization,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAuthorizationDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAuthorizationDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAuthorizationDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAuthorizationDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAuthorizationDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAuthorizationDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAuthorizationDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Business.SysUserInfoBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserInfoBus.GetUserInfo(System.String)">
            <summary>
            获取用户信息
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserInfoBus.UserExist(System.String,System.String)">
            <summary>
            用户是否存在。
            </summary>
            <param name="account"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserInfoBus.UserExist(System.String)">
            <summary>
            用户是否存在。
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserInfoBus.GetUserList(System.Int32,System.Int32,System.String)">
            <summary>
            获取用户列表。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserInfoBus.GetUserCount(System.String)">
            <summary>
            获取用户统计数。
            </summary>
            <param name="whereString"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserInfoBus.GetUserHeadIcon(System.Int32)">
            <summary>
            获取用户头像
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserInfoBus.ChangePassword(System.String,System.String)">
            <summary>
            更改用户密码。
            </summary>
            <param name="account"></param>
            <param name="newpass"></param>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserInfoBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserInfoBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserInfoBus.Insert(NPiculet.Logic.Data.SysUserInfo)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserInfoBus.InsertIdentity(NPiculet.Logic.Data.SysUserInfo)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserInfoBus.Update(NPiculet.Logic.Data.SysUserInfo,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserInfoBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserInfoBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserInfoBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserInfoBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserInfoBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserInfoBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysUserInfoBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Sys.Certificate">
            <summary>
            ComponentGroup
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.SysOrgInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgInfo.CreateDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgInfo.Creator">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgInfo.IsDel">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgInfo.IsEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgInfo.OrderBy">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgInfo.Memo">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgInfo.Level">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgInfo.Alias">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgInfo.FullName">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgInfo.OrgType">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgInfo.OrgCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgInfo.OrgName">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgInfo.Path">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgInfo.RootId">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgInfo.ParentId">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgInfo.GroupCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgInfo.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.SysOrgGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgGroup.CreateDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgGroup.Creator">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgGroup.IsDel">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgGroup.IsVirtual">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgGroup.Memo">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgGroup.GroupCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgGroup.GroupName">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysOrgGroup.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.SysActionDetail">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysActionDetail.NewValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysActionDetail.OldValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysActionDetail.FieldCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysActionDetail.ActionId">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysActionDetail.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.Column">
            <summary>
            数据列属性
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.Column.Field">
            <summary>
            字段名称
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.Column.Type">
            <summary>
            字段类型
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.Column.Length">
            <summary>
            长度
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.Column.Scale">
            <summary>
            刻度（小数位）
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.SysActionLogDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.SysActionLogDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysActionLogDao.Insert(NPiculet.Logic.Data.SysActionLog)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysActionLogDao.Update(NPiculet.Logic.Data.SysActionLog,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysActionLogDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysActionLogDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysActionLogDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysActionLogDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysActionLogDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysActionLogDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysActionLogDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Data.NoticeInfoDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.NoticeInfoDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.NoticeInfoDao.Insert(NPiculet.Logic.Data.NoticeInfo)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.NoticeInfoDao.Update(NPiculet.Logic.Data.NoticeInfo,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.NoticeInfoDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.NoticeInfoDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.NoticeInfoDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.NoticeInfoDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.NoticeInfoDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.NoticeInfoDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.NoticeInfoDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Data.DictGroupDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.DictGroupDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DictGroupDao.Insert(NPiculet.Logic.Data.DictGroup)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DictGroupDao.Update(NPiculet.Logic.Data.DictGroup,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DictGroupDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DictGroupDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DictGroupDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DictGroupDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DictGroupDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DictGroupDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DictGroupDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Business.NoticeInfoBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticeInfoBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticeInfoBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticeInfoBus.Insert(NPiculet.Logic.Data.NoticeInfo)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticeInfoBus.InsertIdentity(NPiculet.Logic.Data.NoticeInfo)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticeInfoBus.Update(NPiculet.Logic.Data.NoticeInfo,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticeInfoBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticeInfoBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticeInfoBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticeInfoBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticeInfoBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticeInfoBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticeInfoBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticeInfoBus.GetMyMsgList(System.Int32,System.Int32)">
            <summary>
            获取的我的最新消息
            </summary>
            <param name="userId"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Data.InfoGroupDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.InfoGroupDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.InfoGroupDao.Insert(NPiculet.Logic.Data.InfoGroup)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.InfoGroupDao.Update(NPiculet.Logic.Data.InfoGroup,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.InfoGroupDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.InfoGroupDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.InfoGroupDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.InfoGroupDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.InfoGroupDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.InfoGroupDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.InfoGroupDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Business.SysOrgGroupBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgGroupBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgGroupBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgGroupBus.Insert(NPiculet.Logic.Data.SysOrgGroup)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgGroupBus.InsertIdentity(NPiculet.Logic.Data.SysOrgGroup)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgGroupBus.Update(NPiculet.Logic.Data.SysOrgGroup,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgGroupBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgGroupBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgGroupBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgGroupBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgGroupBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgGroupBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgGroupBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Business.SysMemberDataBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberDataBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberDataBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberDataBus.Insert(NPiculet.Logic.Data.SysMemberData)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberDataBus.InsertIdentity(NPiculet.Logic.Data.SysMemberData)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberDataBus.Update(NPiculet.Logic.Data.SysMemberData,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberDataBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberDataBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberDataBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberDataBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberDataBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberDataBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberDataBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Business.InfoGroupBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoGroupBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoGroupBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoGroupBus.Insert(NPiculet.Logic.Data.InfoGroup)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoGroupBus.InsertIdentity(NPiculet.Logic.Data.InfoGroup)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoGroupBus.Update(NPiculet.Logic.Data.InfoGroup,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoGroupBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoGroupBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoGroupBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoGroupBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoGroupBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoGroupBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoGroupBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoGroupBus.GetGroup(System.Int32)">
            <summary>
            获取信息组
            </summary>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoGroupBus.GetGroup(System.String)">
            <summary>
            获取信息组
            </summary>
            <param name="groupCode"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoGroupBus.GetGroupList(System.String)">
            <summary>
            获取信息组列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.InfoGroupBus.GetSubGroupList(System.Int32)">
            <summary>
            获取信息组子数据列表
            </summary>
            <param name="parentId"></param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Business.SysExceptionLogBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.SysExceptionLogBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysExceptionLogBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysExceptionLogBus.Insert(NPiculet.Logic.Data.SysExceptionLog)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysExceptionLogBus.InsertIdentity(NPiculet.Logic.Data.SysExceptionLog)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysExceptionLogBus.Update(NPiculet.Logic.Data.SysExceptionLog,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysExceptionLogBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysExceptionLogBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysExceptionLogBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysExceptionLogBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysExceptionLogBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysExceptionLogBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysExceptionLogBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Interface.IAgency">
            <summary>
            代理接口
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.SysMenuDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMenuDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMenuDao.Insert(NPiculet.Logic.Data.SysMenu)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMenuDao.Update(NPiculet.Logic.Data.SysMenu,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMenuDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMenuDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMenuDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMenuDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMenuDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMenuDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMenuDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Data.NoticePushRecordDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.NoticePushRecordDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.NoticePushRecordDao.Insert(NPiculet.Logic.Data.NoticePushRecord)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.NoticePushRecordDao.Update(NPiculet.Logic.Data.NoticePushRecord,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.NoticePushRecordDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.NoticePushRecordDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.NoticePushRecordDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.NoticePushRecordDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.NoticePushRecordDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.NoticePushRecordDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.NoticePushRecordDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Data.DictItemDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.DictItemDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DictItemDao.Insert(NPiculet.Logic.Data.DictItem)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DictItemDao.Update(NPiculet.Logic.Data.DictItem,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DictItemDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DictItemDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DictItemDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DictItemDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DictItemDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DictItemDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.DictItemDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Business.SysLinkUserOrgBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserOrgBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserOrgBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserOrgBus.Insert(NPiculet.Logic.Data.SysLinkUserOrg)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserOrgBus.InsertIdentity(NPiculet.Logic.Data.SysLinkUserOrg)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserOrgBus.Update(NPiculet.Logic.Data.SysLinkUserOrg,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserOrgBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserOrgBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserOrgBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserOrgBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserOrgBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserOrgBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserOrgBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Data.SysLinkUserOrg">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysLinkUserOrg.OrgId">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysLinkUserOrg.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysLinkUserOrg.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.SysOrgGroupDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.SysOrgGroupDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysOrgGroupDao.Insert(NPiculet.Logic.Data.SysOrgGroup)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysOrgGroupDao.Update(NPiculet.Logic.Data.SysOrgGroup,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysOrgGroupDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysOrgGroupDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysOrgGroupDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysOrgGroupDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysOrgGroupDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysOrgGroupDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysOrgGroupDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Data.SysMemberInfoDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMemberInfoDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMemberInfoDao.Insert(NPiculet.Logic.Data.SysMemberInfo)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMemberInfoDao.Update(NPiculet.Logic.Data.SysMemberInfo,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMemberInfoDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMemberInfoDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMemberInfoDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMemberInfoDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMemberInfoDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMemberInfoDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMemberInfoDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Business.SysLinkUserRoleBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserRoleBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserRoleBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserRoleBus.Insert(NPiculet.Logic.Data.SysLinkUserRole)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserRoleBus.InsertIdentity(NPiculet.Logic.Data.SysLinkUserRole)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserRoleBus.Update(NPiculet.Logic.Data.SysLinkUserRole,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserRoleBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserRoleBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserRoleBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserRoleBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserRoleBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserRoleBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserRoleBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysLinkUserRoleBus.UpdateUserOrgList(System.Collections.Generic.List{NPiculet.Logic.Data.SysLinkUserRole},System.Int32)">
            <summary>
            更新用户所属角色信息
            </summary>
            <param name="urList"></param>
            <param name="userId"></param>
        </member>
        <member name="T:NPiculet.Logic.Business.DictItemBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.DictItemBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictItemBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictItemBus.Insert(NPiculet.Logic.Data.DictItem)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictItemBus.InsertIdentity(NPiculet.Logic.Data.DictItem)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictItemBus.Update(NPiculet.Logic.Data.DictItem,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictItemBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictItemBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictItemBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictItemBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictItemBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictItemBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictItemBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictItemBus.GetDictItem(System.String,System.String)">
            <summary>
            获取指定字典项
            </summary>
            <param name="groupCode"></param>
            <param name="itemCode"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictItemBus.GetDictItemList(System.String)">
            <summary>
            获取字典项列表
            </summary>
            <param name="groupCode"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.DictItemBus.GetDictItemData(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            获取字典关联数据
            </summary>
            <param name="curPage"></param>
            <param name="pageSize"></param>
            <param name="groupCode"></param>
            <param name="keywords"></param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Data.SysMemberInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberInfo.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberInfo.UserSn">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberInfo.Account">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberInfo.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberInfo.LoginTimes">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberInfo.LastLoginDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberInfo.LastLogoutDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberInfo.PassQuestion">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberInfo.PassAnswer">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberInfo.FailedCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberInfo.FailedDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberInfo.OrderBy">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberInfo.IsEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberInfo.IsDel">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberInfo.Status">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberInfo.Updater">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberInfo.UpdateDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberInfo.Creator">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberInfo.CreateDate">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.DictItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.DictItem.CreateDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.DictItem.Creator">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.DictItem.IsEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.DictItem.Memo">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.DictItem.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.DictItem.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.DictItem.Code">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.DictItem.GroupCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.DictItem.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Business.SysActionDetailBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionDetailBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionDetailBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionDetailBus.Insert(NPiculet.Logic.Data.SysActionDetail)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionDetailBus.InsertIdentity(NPiculet.Logic.Data.SysActionDetail)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionDetailBus.Update(NPiculet.Logic.Data.SysActionDetail,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionDetailBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionDetailBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionDetailBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionDetailBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionDetailBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionDetailBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionDetailBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Interface.IRole">
            <summary>
            角色接口
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Interface.IRole.SaveRole(System.String)">
            <summary>
            添加角色
            </summary>
            <param name="jsonRole">角色信息json</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Interface.IRole.UpdateRole(System.String)">
            <summary>
            修改角色
            </summary>
            <param name="jsonRole">角色信息json</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Interface.IRole.DelRole(System.String)">
            <summary>
            删除角色
            </summary>
            <param name="RoleID">角色ID</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Interface.IRole.GetRoleList(System.String)">
            <summary>
            获取角色列表
            </summary>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Data.SysRoleInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysRoleInfo.CreateDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysRoleInfo.Creator">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysRoleInfo.IsDel">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysRoleInfo.IsEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysRoleInfo.Comment">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysRoleInfo.RoleName">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysRoleInfo.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.DictGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.DictGroup.CreateDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.DictGroup.Creator">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.DictGroup.IsEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.DictGroup.IsDel">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.DictGroup.EntityCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.DictGroup.IsEntity">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.DictGroup.Memo">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.DictGroup.DisplayMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.DictGroup.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.DictGroup.Code">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.DictGroup.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.SysAdminInfoDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAdminInfoDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAdminInfoDao.Insert(NPiculet.Logic.Data.SysAdminInfo)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAdminInfoDao.Update(NPiculet.Logic.Data.SysAdminInfo,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAdminInfoDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAdminInfoDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAdminInfoDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAdminInfoDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAdminInfoDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAdminInfoDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysAdminInfoDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Data.SysMemberDataDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMemberDataDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMemberDataDao.Insert(NPiculet.Logic.Data.SysMemberData)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMemberDataDao.Update(NPiculet.Logic.Data.SysMemberData,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMemberDataDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMemberDataDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMemberDataDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMemberDataDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMemberDataDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMemberDataDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysMemberDataDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Business.NoticePushRecordBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticePushRecordBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticePushRecordBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticePushRecordBus.Insert(NPiculet.Logic.Data.NoticePushRecord)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticePushRecordBus.InsertIdentity(NPiculet.Logic.Data.NoticePushRecord)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticePushRecordBus.Update(NPiculet.Logic.Data.NoticePushRecord,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticePushRecordBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticePushRecordBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticePushRecordBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticePushRecordBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticePushRecordBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticePushRecordBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.NoticePushRecordBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Data.SysAdminInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysAdminInfo.IsEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysAdminInfo.UserAccount">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysAdminInfo.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.SysActionLog">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysActionLog.Date">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysActionLog.Comment">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysActionLog.TargetId">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysActionLog.TargetCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysActionLog.ActionAccount">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysActionLog.ActionType">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysActionLog.Id">
            <summary>
            
            </summary>
        </member>
        <member name="F:NPiculet.Logic.Data.GroupType.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:NPiculet.Logic.Data.GroupType.ContentPage">
            <summary>
            内容页
            </summary>
        </member>
        <member name="F:NPiculet.Logic.Data.GroupType.List">
            <summary>
            列表
            </summary>
        </member>
        <member name="F:NPiculet.Logic.Data.GroupType.CategoryContentPage">
            <summary>
            分类内容
            </summary>
        </member>
        <member name="F:NPiculet.Logic.Data.GroupType.CategoryList">
            <summary>
            分类列表
            </summary>
        </member>
        <member name="F:NPiculet.Logic.Data.AdvType.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:NPiculet.Logic.Data.AdvType.Main">
            <summary>
            首页主广告
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.SysUserDataDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.SysUserDataDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysUserDataDao.Insert(NPiculet.Logic.Data.SysUserData)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysUserDataDao.Update(NPiculet.Logic.Data.SysUserData,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysUserDataDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysUserDataDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysUserDataDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysUserDataDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysUserDataDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysUserDataDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysUserDataDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Data.SysRoleInfoDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.SysRoleInfoDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysRoleInfoDao.Insert(NPiculet.Logic.Data.SysRoleInfo)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysRoleInfoDao.Update(NPiculet.Logic.Data.SysRoleInfo,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysRoleInfoDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysRoleInfoDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysRoleInfoDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysRoleInfoDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysRoleInfoDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysRoleInfoDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysRoleInfoDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Business.SysRoleInfoBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.SysRoleInfoBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysRoleInfoBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysRoleInfoBus.Insert(NPiculet.Logic.Data.SysRoleInfo)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysRoleInfoBus.InsertIdentity(NPiculet.Logic.Data.SysRoleInfo)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysRoleInfoBus.Update(NPiculet.Logic.Data.SysRoleInfo,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysRoleInfoBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysRoleInfoBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysRoleInfoBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysRoleInfoBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysRoleInfoBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysRoleInfoBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysRoleInfoBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysRoleInfoBus.RoleExist(System.String)">
            <summary>
            角色是否存在
            </summary>
            <param name="roleName"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysRoleInfoBus.GetRoleInfo(System.String)">
            <summary>
            获取角色信息
            </summary>
            <param name="roleName"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysRoleInfoBus.GetUserRole(System.Int32)">
            <summary>
            获取用户所属角色
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Business.SysMenuBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMenuBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMenuBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMenuBus.Insert(NPiculet.Logic.Data.SysMenu)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMenuBus.InsertIdentity(NPiculet.Logic.Data.SysMenu)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMenuBus.Update(NPiculet.Logic.Data.SysMenu,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMenuBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMenuBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMenuBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMenuBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMenuBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMenuBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMenuBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMenuBus.GetMainMenu">
            <summary>
            获取主菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMenuBus.GetSubMenu(System.Int32)">
            <summary>
            获取子菜单
            </summary>
            <param name="parentId"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMenuBus.FixMenuPath">
            <summary>
            修复菜单项路径及层次信息。
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Business.SysMemberInfoBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberInfoBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberInfoBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberInfoBus.Insert(NPiculet.Logic.Data.SysMemberInfo)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberInfoBus.InsertIdentity(NPiculet.Logic.Data.SysMemberInfo)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberInfoBus.Update(NPiculet.Logic.Data.SysMemberInfo,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberInfoBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberInfoBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberInfoBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberInfoBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberInfoBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberInfoBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberInfoBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberInfoBus.GetMemberInfo(System.String)">
            <summary>
            获取用户信息
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberInfoBus.MemberExist(System.String,System.String)">
            <summary>
            用户是否存在。
            </summary>
            <param name="account"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberInfoBus.MemberExist(System.String)">
            <summary>
            用户是否存在。
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberInfoBus.GetMemberList(System.Int32,System.Int32,System.String)">
            <summary>
            获取用户列表。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberInfoBus.GetMemberCount(System.String)">
            <summary>
            获取用户统计数。
            </summary>
            <param name="whereString"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberInfoBus.GetMemberHeadIcon(System.Int32)">
            <summary>
            获取用户头像
            </summary>
            <param name="memberId"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysMemberInfoBus.ChangePassword(System.String,System.String)">
            <summary>
            更改用户密码。
            </summary>
            <param name="account"></param>
            <param name="newpass"></param>
        </member>
        <member name="T:NPiculet.Logic.Data.SysMemberData">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.UserAccount">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.Nickname">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.Birthday">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.Sex">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.Email">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.Mobile">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.Address">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.MemberCard">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.IdCard">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.Education">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.QQ">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.Weixin">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.Weibo">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.Interest">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.PointCurrent">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.PointTotal">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.Exp">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.Cash">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.Cost">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.HeadIcon">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.Memo">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMemberData.IsDel">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.SysExceptionLogDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.SysExceptionLogDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysExceptionLogDao.Insert(NPiculet.Logic.Data.SysExceptionLog)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysExceptionLogDao.Update(NPiculet.Logic.Data.SysExceptionLog,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysExceptionLogDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysExceptionLogDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysExceptionLogDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysExceptionLogDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysExceptionLogDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysExceptionLogDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysExceptionLogDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Base.MemberPage">
            <summary>
            会员页基类
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Base.MemberPage.GetDateTimeString(System.DateTime,System.String)">
            <summary>
            获取格式化的时间
            </summary>
            <param name="date"></param>
            <param name="formatString"></param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Base.AdminPage">
            <summary>
            后台管理页基类
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.SysUserInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserInfo.CreateDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserInfo.Creator">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserInfo.IsDel">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserInfo.IsEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserInfo.OrderBy">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserInfo.FailedDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserInfo.FailedCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserInfo.LastLogoutDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserInfo.LastLoginDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserInfo.LoginTimes">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserInfo.OrgId">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserInfo.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserInfo.Account">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserInfo.UserSn">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserInfo.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.SysConfig">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysConfig.IsEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysConfig.CreateDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysConfig.Creator">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysConfig.ConfigValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysConfig.ConfigCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysConfig.ConfigName">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysConfig.ConfigType">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysConfig.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.SysMenu">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMenu.CreateDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMenu.Creator">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMenu.IsDel">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMenu.IsEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMenu.OrderBy">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMenu.Comment">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMenu.Target">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMenu.Url">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMenu.IsExternal">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMenu.Depth">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMenu.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMenu.Icon">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMenu.Code">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMenu.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMenu.Path">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMenu.RootId">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMenu.ParentId">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysMenu.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.SysOrgInfoDao">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Data.SysOrgInfoDao.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysOrgInfoDao.Insert(NPiculet.Logic.Data.SysOrgInfo)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysOrgInfoDao.Update(NPiculet.Logic.Data.SysOrgInfo,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysOrgInfoDao.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysOrgInfoDao.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysOrgInfoDao.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysOrgInfoDao.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysOrgInfoDao.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysOrgInfoDao.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Data.SysOrgInfoDao.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Business.SysActionLogBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionLogBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionLogBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionLogBus.Insert(NPiculet.Logic.Data.SysActionLog)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionLogBus.InsertIdentity(NPiculet.Logic.Data.SysActionLog)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionLogBus.Update(NPiculet.Logic.Data.SysActionLog,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionLogBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionLogBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionLogBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionLogBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionLogBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionLogBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionLogBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionLogBus.NewLog">
            <summary>
            创建一个新日志对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysActionLogBus.NewDetail">
            <summary>
            创建一个新日志明细对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.LoggerManager.NewLog">
            <summary>
            创建新的日志对象，已包含日志 Type 信息。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.LoggerManager.NewDetail">
            <summary>
            创建新的日志明细对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.LoggerManager.Log(System.String,System.String,System.String,System.String,System.String,NPiculet.Logic.Data.SysActionDetail[])">
            <summary>
            记录日志
            </summary>
            <param name="actionType">日志类型</param>
            <param name="userAccount"></param>
            <param name="targetCode">来自模块（或数据表）</param>
            <param name="targetId">数据ID</param>
            <param name="msg"></param>
            <param name="details"></param>
        </member>
        <member name="M:NPiculet.Logic.Sys.LoggerManager.Log(System.String,System.String,System.String,System.String,NPiculet.Logic.Data.SysActionDetail[])">
            <summary>
            记录日志
            </summary>
            <param name="userAccount"></param>
            <param name="module">来自模块（或数据表）</param>
            <param name="id">数据ID</param>
            <param name="msg"></param>
            <param name="details"></param>
        </member>
        <member name="T:NPiculet.Logic.Sys.ConfigManager">
            <summary>
            系统配置管理器
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Sys.ConfigManager.InitCache">
            <summary>
            初始化缓存
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Sys.ConfigManager.GetWebConfigList">
            <summary>
            获取配置列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.ConfigManager.GetWebConfig(System.String)">
            <summary>
            获取配置项
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.ConfigManager.RemoveWebConfig(System.String)">
            <summary>
            清除配置项
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.ConfigManager.ClearWebConfigCache">
            <summary>
            清除配置缓存
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.NoticePushRecord">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.NoticePushRecord.ReadDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.NoticePushRecord.IsRead">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.NoticePushRecord.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.NoticePushRecord.NoticeSn">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.NoticePushRecord.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.InfoContentPage">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoContentPage.CreateDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoContentPage.OrderBy">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoContentPage.Author">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoContentPage.IsEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoContentPage.Click">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoContentPage.Source">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoContentPage.Thumb">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoContentPage.Content">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoContentPage.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoContentPage.CategoryName">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoContentPage.CategoryId">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoContentPage.GroupCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.InfoContentPage.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Business.SysOrgInfoBus">
            <summary>
            自定义逻辑
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgInfoBus.CreateDao">
            <summary>
            创建数据访问类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgInfoBus.CreateModel">
            <summary>
            创建数据实体类
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgInfoBus.Insert(NPiculet.Logic.Data.SysOrgInfo)">
            <summary>
            新增数据
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgInfoBus.InsertIdentity(NPiculet.Logic.Data.SysOrgInfo)">
            <summary>
            新增数据，并返回自增ID
            </summary>
            <param name="model">实体类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgInfoBus.Update(NPiculet.Logic.Data.SysOrgInfo,System.String)">
            <summary>
            更新数据
            </summary>
            <param name="model">实体类</param>
            <param name="whereString">可选，更新条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgInfoBus.Delete(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgInfoBus.Query(System.String,System.String)">
            <summary>
            查询数据表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgInfoBus.Query(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询数据表，并分页返回
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">分页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序字段</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgInfoBus.QueryModel(System.String)">
            <summary>
            查询实体类
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgInfoBus.QueryList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="curPage">当前页码</param>
            <param name="pageSize">每页大小</param>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgInfoBus.QueryList(System.String,System.String)">
            <summary>
            查询实体类列表
            </summary>
            <param name="whereString">查询条件</param>
            <param name="orderBy">排序</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgInfoBus.RecordCount(System.String)">
            <summary>
            记录统计
            </summary>
            <param name="whereString">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgInfoBus.GetOrgInfo(System.Int32)">
            <summary>
            获取组织机构信息。
            </summary>
            <param name="orgId"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Business.SysOrgInfoBus.GetUserOrg(System.Int32)">
            <summary>
            根据用户ID获取组织机构信息
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Data.SysAuthorization">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysAuthorization.CreateDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysAuthorization.Creator">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysAuthorization.FunctionType">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysAuthorization.FunctionId">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysAuthorization.TargetType">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysAuthorization.TargetId">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysAuthorization.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.NoticeInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.NoticeInfo.CreateDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.NoticeInfo.SenderName">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.NoticeInfo.SenderId">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.NoticeInfo.Url">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.NoticeInfo.NoticeSource">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.NoticeInfo.NoticeType">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.NoticeInfo.Content">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.NoticeInfo.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.NoticeInfo.Sn">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.NoticeInfo.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Sys.LoginKit">
            <summary>
            Login : 登陆验证类
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Sys.LoginKit.MemberExist(System.String,System.String)">
            <summary>
            检查会员是否存在
            </summary>
            <param name="account"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.LoginKit.MemberExist(System.String)">
            <summary>
            检查会员是否存在
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.LoginKit.MemberLogin(NPiculet.Logic.Member)">
            <summary>
            会员登录
            </summary>
            <param name="member"></param>
            <returns>返回用户本次登录的唯一标识：UserSessionCode</returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.LoginKit.GetCurrentMember">
            <summary>
            获取当前会员帐号信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.LoginKit.AdminExist(System.String,System.String)">
            <summary>
            检查管理员是否存在
            </summary>
            <param name="account"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.LoginKit.AdminExist(System.String)">
            <summary>
            检查管理员是否存在
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.LoginKit.AdminLogin(NPiculet.Logic.Administrator)">
            <summary>
            管理员登录
            </summary>
            <param name="admin"></param>
            <returns>返回用户本次登录的唯一标识：UserSessionCode</returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.LoginKit.GetCurrentAdmin">
            <summary>
            获取当前管理员帐号信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.LoginKit.Logout">
            <summary>
            退出登录
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Sys.LoginKit.CheckVerifyCode(System.String)">
            <summary>
            检查验证码是否正确
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.LoginKit.IsAuthorized(System.Web.HttpContext,System.String,System.String)">
            <summary>
            根据 flag 和 userSessionCode 验证是否已授权
            </summary>
            <param name="context">根据 HttpContext 上下文对象来获取 Session</param>
            <param name="flag">请求验证哪种权限，参数值：any、admin、member</param>
            <param name="userSessionCode"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.LoginKit.IsAuthorized(System.String,System.String)">
            <summary>
            根据 flag 和 userSessionCode 验证是否已授权
            </summary>
            <param name="flag">请求验证哪种权限，参数值：any、admin、member</param>
            <param name="userSessionCode"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.LoginKit.GetUserSessionCode">
            <summary>
            获取当前用户唯一标识
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Sys.LoginKit.GetUserInfo(System.String)">
            <summary>
            获取授权用户的信息
            </summary>
            <param name="userSessionCode"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Logic.Info.NoticeManager.SendNotice(NPiculet.Logic.Data.NoticeInfo,System.String[])">
            <summary>
            发送通知
            </summary>
            <param name="notice">通知内容</param>
            <param name="receiver">接收者ID集合</param>
        </member>
        <member name="M:NPiculet.Logic.Info.NoticeManager.FinishNotice(System.String,System.String)">
            <summary>
            结束通知
            </summary>
            <param name="noticeId"></param>
            <param name="userId"></param>
        </member>
        <member name="M:NPiculet.Logic.Info.NoticeManager.DeleteNotice(System.String,System.String)">
            <summary>
            删除通知
            </summary>
            <param name="noticeId"></param>
            <param name="userId"></param>
        </member>
        <member name="T:NPiculet.Logic.Base.MemberUserControl">
            <summary>
            会员页基类
            </summary>
        </member>
        <member name="M:NPiculet.Logic.Base.MemberUserControl.GetDateTimeString(System.DateTime,System.String)">
            <summary>
            获取格式化的时间
            </summary>
            <param name="date"></param>
            <param name="formatString"></param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Logic.Base.AdminUserControl">
            <summary>
            后台管理页基类
            </summary>
        </member>
        <member name="T:NPiculet.Logic.Data.SysUserData">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.Memo">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.HeadIcon">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.Cost">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.Cash">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.Exp">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.PointTotal">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.PointCurrent">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.Interest">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.Weibo">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.Weixin">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.QQ">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.Education">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.IdCard">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.MemberCard">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.Address">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.Mobile">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.Email">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.Sex">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.Birthday">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.Nickname">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.UserAccount">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="P:NPiculet.Logic.Data.SysUserData.Id">
            <summary>
            
            </summary>
        </member>
        <member name="T:NPiculet.Plugin.IPlugin">
            <summary>
            插件接口。
            </summary>
        </member>
        <member name="M:NPiculet.Plugin.IPlugin.GetDescriptor">
            <summary>
            获取描述对象。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Plugin.IPlugin.Start">
            <summary>
            开始插件。
            </summary>
        </member>
        <member name="M:NPiculet.Plugin.IPlugin.Stop">
            <summary>
            停止插件。
            </summary>
        </member>
        <member name="P:NPiculet.Plugin.IPlugin.PluginStatus">
            <summary>
            插件状态。
            </summary>
        </member>
        <member name="M:NPiculet.Plugin.PluginBase.GetDescriptor">
            <summary>
            获取描述对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Plugin.PluginBase.Start">
            <summary>
            启动
            </summary>
        </member>
        <member name="M:NPiculet.Plugin.PluginBase.Stop">
            <summary>
            停止
            </summary>
        </member>
        <member name="M:NPiculet.Plugin.PluginBase.DoStart">
            <summary>
            启动插件，做初始化操作。
            </summary>
        </member>
        <member name="M:NPiculet.Plugin.PluginBase.DoStop">
            <summary>
            停止插件，做释放资源操作。
            </summary>
        </member>
        <member name="M:NPiculet.Plugin.PluginBase.IsActive">
            <summary>
            是否在活动。
            </summary>
            <returns></returns>
        </member>
        <member name="P:NPiculet.Plugin.PluginBase.PluginStatus">
            <summary>
            状态
            </summary>
        </member>
        <member name="M:NPiculet.Cache.ICache`1.ContainsKey(System.String)">
            <summary>
            是否包含键
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Cache.ICache`1.Get(System.String)">
            <summary>
            获取缓存。
            </summary>
            <param name="key">Key</param>
            <returns>返回 <paramref name="key"/> 或 <c>null</c>。</returns>
        </member>
        <member name="M:NPiculet.Cache.ICache`1.Remove(System.String)">
            <summary>
            移除一个缓存。
            </summary>
            <param name="key">Key</param>
        </member>
        <member name="M:NPiculet.Cache.ICache`1.RemoveAll(System.Collections.Generic.ICollection{System.String})">
            <summary>
            移除所有指定的缓存集合。
            </summary>
            <param name="keys">Key 的集合</param>
        </member>
        <member name="M:NPiculet.Cache.ICache`1.Clear">
            <summary>
            移除所有缓存。
            </summary>
        </member>
        <member name="M:NPiculet.Cache.ICache`1.Set(System.String,`0)">
            <summary>
            增加一个缓存。
            </summary>
            <remarks>新增一个缓存，使用默认优先级且没有过期时间。</remarks>
            <param name="key">Key</param>
            <param name="value">缓存值</param>
        </member>
        <member name="M:NPiculet.Cache.ICache`1.Set(System.String,`0,System.TimeSpan,NPiculet.Cache.CacheBehavior)">
            <summary>
            增加一个缓存。
            </summary>
            <remarks>新增一个缓存，使用默认优先级。</remarks>
            <param name="key">Key</param>
            <param name="value">缓存值</param>
            <param name="delay">缓存生存间隔</param>
            <param name="behavior">缓存行为</param>
        </member>
        <member name="P:NPiculet.Cache.ICache`1.Count">
            <summary>
            统计缓存数量。
            </summary>
        </member>
        <member name="P:NPiculet.Cache.ICache`1.Keys">
            <summary>
            获取缓存 Key 集合。
            </summary>
        </member>
        <member name="F:NPiculet.Cache.CacheManager`1._container">
            <summary>
            初始化容器，并防止被覆盖。
            </summary>
        </member>
        <member name="M:NPiculet.Cache.CacheManager`1.ClearExpiredCache">
            <summary>
            清理过期缓存
            </summary>
        </member>
        <member name="M:NPiculet.Cache.CacheManager`1.ContainsKey(System.String)">
            <summary>
            是否包含键
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Cache.CacheManager`1.Get(System.String)">
            <summary>
            获取 key 键所指向的对象。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Cache.CacheManager`1.Remove(System.String)">
            <summary>
            移除一条项目。
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:NPiculet.Cache.CacheManager`1.RemoveAll(System.Collections.Generic.ICollection{System.String})">
            <summary>
            移除所有指定的缓存集合。
            </summary>
            <param name="keys">Key 的集合</param>
        </member>
        <member name="M:NPiculet.Cache.CacheManager`1.Clear">
            <summary>
            移除所有缓存。
            </summary>
        </member>
        <member name="M:NPiculet.Cache.CacheManager`1.Set(System.String,`0,System.TimeSpan,NPiculet.Cache.CacheBehavior)">
            <summary>
            设置缓存
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="delay"></param>
            <param name="behavior"></param>
        </member>
        <member name="M:NPiculet.Cache.CacheManager`1.Set(System.String,`0)">
            <summary>
            设置缓存，默认 30 分钟过期
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="P:NPiculet.Cache.CacheManager`1.Count">
            <summary>
            统计缓存数量
            </summary>
        </member>
        <member name="P:NPiculet.Cache.CacheManager`1.Keys">
            <summary>
            获取所有键集合。
            </summary>
        </member>
        <member name="T:NPiculet.Plugin.PluginStatus">
            <summary>
            插件状态
            </summary>
        </member>
        <member name="F:NPiculet.Plugin.PluginStatus.Wait">
            <summary>
            等待
            </summary>
        </member>
        <member name="F:NPiculet.Plugin.PluginStatus.Active">
            <summary>
            已激活
            </summary>
        </member>
        <member name="F:NPiculet.Plugin.PluginStatus.Stop">
            <summary>
            已停止，等待回收
            </summary>
        </member>
        <member name="F:NPiculet.Plugin.PluginStatus.Bad">
            <summary>
            已损坏
            </summary>
        </member>
        <member name="P:NPiculet.Core.PluginConfigSection.PluginConfigCollection">
            <summary>  
            对应 PluginConfigSection 节点下的 PluginConfig 子节点  
            </summary>  
        </member>
        <member name="M:NPiculet.Plugin.IPluginDescriptor.GetId">
            <summary>
            获取插件ID。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Plugin.IPluginDescriptor.GetPluginType">
            <summary>
            获取插件类型。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Plugin.IPluginDescriptor.GetDependPlugins">
            <summary>
            获取依赖插件数组。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Plugin.IPluginDescriptor.GetResourceString(System.String)">
            <summary>
            获取资源。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Plugin.IPluginDescriptor.GetPluginPath">
            <summary>
            获取插件路径。
            </summary>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Plugin.PluginRegistry">
            <summary>
            插件注册表，负责管理插件的注册。
            </summary>
        </member>
        <member name="M:NPiculet.Plugin.PluginRegistry.InitPlugins">
            <summary>
            初始化插件列表。
            </summary>
        </member>
        <member name="M:NPiculet.Plugin.PluginRegistry.CheckPrerequisites(NPiculet.Plugin.IPluginDescriptor)">
            <summary>
            检查依赖插件。
            </summary>
            <param name="descr"></param>
        </member>
        <member name="M:NPiculet.Plugin.PluginRegistry.Register(NPiculet.Plugin.IPlugin)">
            <summary>
            注册插件
            </summary>
            <param name="plugin"></param>
        </member>
        <member name="M:NPiculet.Plugin.PluginRegistry.Remove(System.Type)">
            <summary>
            移除插件
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:NPiculet.Plugin.PluginRegistry.ContainsPlugin(System.Type)">
            <summary>
            是否包含插件。
            </summary>
            <param name="parentOrSame">插件的接口、父类型或同类型</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Plugin.PluginRegistry.GetPlugin(System.Type)">
            <summary>
            根据接口、父类型或同类型获取插件.
            </summary>
            <param name="parentOrSame">插件的接口、父类型或同类型</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Cache.CacheBehavior">
            <summary>
            缓存的存取行为。
            </summary>
        </member>
        <member name="F:NPiculet.Cache.CacheBehavior.NeverExpire">
            <summary>
            永不过期
            </summary>
        </member>
        <member name="F:NPiculet.Cache.CacheBehavior.FixedTime">
            <summary>
            固定时间失效
            </summary>
        </member>
        <member name="F:NPiculet.Cache.CacheBehavior.Delay">
            <summary>
            每次读取缓存数据时，皆对缓存项进行延时
            </summary>
        </member>
        <member name="F:NPiculet.Cache.CacheBehavior.Once">
            <summary>
            只读一次
            </summary>
        </member>
        <member name="M:NPiculet.Cache.CacheItem`1.#ctor(`0,System.TimeSpan,NPiculet.Cache.CacheBehavior)">
            <summary>
            构造函数，指定值、过期时间、行为
            </summary>
            <param name="value"></param>
            <param name="delay"></param>
            <param name="behavior"></param>
        </member>
        <member name="M:NPiculet.Cache.CacheItem`1.#ctor(`0)">
            <summary>
            构造函数，指定值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:NPiculet.Cache.CacheItem`1.IsExpired">
            <summary>
            是否已过期
            </summary>
            <returns></returns>
        </member>
        <member name="P:NPiculet.Cache.CacheItem`1.Value">
            <summary>
            获取缓存值
            </summary>
        </member>
        <member name="T:NPiculet.Plugin.PluginException">
            <summary>
            插件系统抛出的异常。
            </summary>
        </member>
        <member name="M:NPiculet.Plugin.PluginManager.ContainsPlugin(System.Type)">
            <summary>
            是否包含插件。
            </summary>
            <param name="parentOrSame">插件的接口、父类或同级类</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Plugin.PluginManager.GetPlugin``1">
            <summary>
            获取插件。
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Error.CoreException">
            <summary>
            框架核心抛出的异常。
            </summary>
        </member>
        <member name="T:NPiculet.Error.LogicException">
            <summary>
            框架内业务逻辑处理时抛出的异常。
            </summary>
        </member>
        <member name="T:NPiculet.Data.IDbHelper">
            <summary>
            数据库操作接口。这是一个基类，用于初始化数据连接，包含了通用的数据库操作方法。
            </summary>
        </member>
        <member name="M:NPiculet.Data.IDbHelper.Open(System.String)">
            <summary>
            打开数据库连接。
            </summary>
        </member>
        <member name="M:NPiculet.Data.IDbHelper.Close">
            <summary>
            关闭数据库连接。
            </summary>
        </member>
        <member name="M:NPiculet.Data.IDbHelper.Dispose">
            <summary>
            销毁数据库连接。
            </summary>
        </member>
        <member name="M:NPiculet.Data.IDbHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.IDbDataParameter[])">
            <summary>
            查询数据库并返回第一行第一列的值。
            </summary>
            <param name="sql">执行语句</param>
            <param name="type">指令类型</param>
            <param name="connKey">连接配置名称</param>
            <param name="parms">参数</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.IDbHelper.GetDataReader(System.String,System.Data.CommandType,System.String,System.Data.IDbDataParameter[])">
            <summary>
            查询数据库并返回 IDataReader 对象，只读向前，会自动打开数据库连接，但使用后连接不会自动关闭！
            </summary>
            <param name="sql">执行语句</param>
            <param name="type">指令类型</param>
            <param name="connKey">连接配置名称</param>
            <param name="parms">参数</param>
            <returns>IDataReader 对象</returns>
        </member>
        <member name="M:NPiculet.Data.IDbHelper.GetDataSet(System.String,System.Data.CommandType,System.String,System.Data.IDbDataParameter[])">
            <summary>
            查询数据库并返回 DataSet 对象。
            </summary>
            <param name="sql">执行语句</param>
            <param name="type">指令类型</param>
            <param name="connKey">连接配置名称</param>
            <param name="parms">参数</param>
            <returns>DataSet 对象</returns>
        </member>
        <member name="M:NPiculet.Data.IDbHelper.GetDataTable(System.String,System.Data.CommandType,System.String,System.Data.IDbDataParameter[])">
            <summary>
            查询数据库并返回 DataTable 对象。
            </summary>
            <param name="sql">执行语句</param>
            <param name="type">指令类型</param>
            <param name="connKey">连接配置名称</param>
            <param name="parms">参数</param>
            <returns>DataTable 对象</returns>
        </member>
        <member name="M:NPiculet.Data.IDbHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.IDbDataParameter[])">
            <summary>
            执行执行语句，并返回受影响的行数。
            </summary>
            <param name="sql">执行语句</param>
            <param name="type">指令类型</param>
            <param name="connKey">连接配置名称</param>
            <param name="parms">参数</param>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:NPiculet.Data.IDbHelper.ExecuteNonQuery(System.String,System.Data.IDbDataParameter[])">
            <summary>
            执行执行语句，并返回受影响的行数。
            </summary>
            <param name="sql">执行语句</param>
            <param name="parms">参数</param>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:NPiculet.Data.IDbHelper.ExecuteInsertIdentity(NPiculet.Data.IExecuteObject,System.Data.CommandType,System.String,System.Data.IDbDataParameter[])">
            <summary>
            执行新增语句，并返回自增ID
            </summary>
            <param name="execute">执行对象</param>
            <param name="type">指令类型</param>
            <param name="connKey">连接配置名称</param>
            <param name="parms">参数</param>
            <returns>自增ID</returns>
        </member>
        <member name="M:NPiculet.Data.IDbHelper.ExecuteInsertIdentity(NPiculet.Data.IExecuteObject,System.Data.IDbDataParameter[])">
            <summary>
            执行执行语句，并返回受影响的行数。
            </summary>
            <param name="execute">执行对象</param>
            <param name="parms">参数</param>
            <returns>自增ID</returns>
        </member>
        <member name="M:NPiculet.Data.IDbHelper.BatchInsert(System.Data.DataTable,System.String,System.String)">
            <summary>
            批量插入数据。
            </summary>
            <param name="dataTable">数据集</param>
            <param name="tableName">要插入的数据表名称</param>
            <param name="connKey">连接配置名称</param>
        </member>
        <member name="M:NPiculet.Data.IDbHelper.BeginTransaction">
            <summary>
            开启事务模式并返回事务对象。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.IDbHelper.CloneNew">
            <summary>
            克隆一个新对象。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.IDbHelper.GetDataValue(System.Object)">
            <summary>
            获取数据值，并预处理
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="P:NPiculet.Data.IDbHelper.Command">
            <summary>
            DbCommand 对象。
            </summary>
        </member>
        <member name="P:NPiculet.Data.IDbHelper.Connection">
            <summary>
            DbCommection 对象。
            </summary>
        </member>
        <member name="P:NPiculet.Data.IDbHelper.Adapter">
            <summary>
            DbDataAapter 对象。
            </summary>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.GetConnectionType(System.String)">
            <summary>
            获取指定的数据连接类型
            </summary>
            <param name="connKey"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.GetConnectionString(System.String)">
            <summary>
            获取指定的连接字符串
            </summary>
            <param name="connKey"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.#ctor(NPiculet.Data.ServerType,System.String)">
            <summary>
            初始化连接字符串
            </summary>
            <param name="type"></param>
            <param name="connString"></param>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.CreateConnection(System.String)">
            <summary>
            创建数据库连接对象。
            </summary>
            <param name="connString">连接字符串</param>
            <returns>数据库连接对象</returns>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.CreateDataAdapter">
            <summary>
            创建数据适配器。
            </summary>
            <returns>数据适配器</returns>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.Open(System.String)">
            <summary>
            打开数据库连接。
            </summary>
            <param name="connKey">连接配置名称</param>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.Close">
            <summary>
            关闭数据库连接。
            </summary>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.Dispose">
            <summary>
            销毁数据库连接。
            </summary>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.IDbDataParameter[])">
            <summary>
            查询数据库并返回第一行第一列的值。
            </summary>
            <param name="sql">执行语句</param>
            <param name="type">指令类型</param>
            <param name="connKey">连接配置名称</param>
            <param name="parms">参数</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.GetDataReader(System.String,System.Data.CommandType,System.String,System.Data.IDbDataParameter[])">
            <summary>
            查询数据库并返回 IDataReader 对象，只读向前，会自动打开数据库连接，但使用后连接不会自动关闭！
            </summary>
            <param name="sql">执行语句</param>
            <param name="type">指令类型</param>
            <param name="connKey">连接配置名称</param>
            <param name="parms">参数</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.GetDataSet(System.String,System.Data.CommandType,System.String,System.Data.IDbDataParameter[])">
            <summary>
            查询数据库并返回 DataSet 对象。
            </summary>
            <param name="sql">执行语句</param>
            <param name="type">指令类型</param>
            <param name="connKey">连接配置名称</param>
            <param name="parms">参数</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.GetDataTable(System.String,System.Data.CommandType,System.String,System.Data.IDbDataParameter[])">
            <summary>
            查询数据库并返回 DataTable 对象。
            </summary>
            <param name="sql">执行语句</param>
            <param name="type">指令类型</param>
            <param name="connKey">连接配置名称</param>
            <param name="parms">参数</param>
            <returns>DataTable 对象</returns>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.IDbDataParameter[])">
            <summary>
            执行执行语句，并返回受影响的行数。
            </summary>
            <param name="connKey">连接配置名称</param>
            <param name="type">执行类型</param>
            <param name="sql">执行语句</param>
            <param name="parms">参数</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.ExecuteNonQuery(System.String,System.Data.IDbDataParameter[])">
            <summary>
            执行执行语句，并返回受影响的行数。
            </summary>
            <param name="sql">执行语句</param>
            <param name="parms">参数</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.ExecuteInsertIdentity(NPiculet.Data.IExecuteObject,System.Data.CommandType,System.String,System.Data.IDbDataParameter[])">
            <summary>
            执行新增语句，并返回最新的自增ID值。
            </summary>
            <param name="connKey">连接配置名称</param>
            <param name="type">执行类型</param>
            <param name="execute">执行对象</param>
            <param name="parms">参数</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.ExecuteInsertIdentity(NPiculet.Data.IExecuteObject,System.Data.IDbDataParameter[])">
            <summary>
            执行新增语句，并返回最新的自增ID值。
            </summary>
            <param name="execute">执行对象</param>
            <param name="parms">参数</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.BatchInsert(System.Data.DataTable,System.String,System.String)">
            <summary>
            批量插入数据。
            </summary>
            <param name="dataTable">数据表</param>
            <param name="tableName">要插入的数据表名称</param>
            <param name="connKey">连接配置名称</param>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.CloneNew">
            <summary>
            克隆一个新对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.GetDataValue(System.Object)">
            <summary>
            获取数据值，并预处理
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.ShowError(System.Exception,System.String)">
            <summary>
            显示出错信息。
            </summary>
            <param name="ex">异常</param>
            <param name="msg">附加信息</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.JoinParameters(System.Data.IDbDataParameter[],System.Boolean)">
            <summary>
            连接参数
            </summary>
            <param name="parms">参数集合</param>
            <param name="clean">首先清理参数</param>
        </member>
        <member name="M:NPiculet.Data.AbstractDbHelper.ProcessSqlString(System.String)">
            <summary>
            处理传入的字符串。
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="P:NPiculet.Data.AbstractDbHelper.DefaultConnectionKey">
            <summary>
            获取数据库连接字符串的索引键名称。
            </summary>
        </member>
        <member name="P:NPiculet.Data.AbstractDbHelper.DefaultConnectionType">
            <summary>
            获取数据库类型。
            </summary>
            <returns></returns>
        </member>
        <member name="P:NPiculet.Data.AbstractDbHelper.DefaultConnectionString">
            <summary>
            获取数据库连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:NPiculet.Data.AbstractDbHelper.CurrentConnectionType">
            <summary>
            当前连接字符串
            </summary>
        </member>
        <member name="P:NPiculet.Data.AbstractDbHelper.CurrentConnectionString">
            <summary>
            当前连接字符串
            </summary>
        </member>
        <member name="P:NPiculet.Data.AbstractDbHelper.Connection">
            <summary>
            DbCommection 对象。
            </summary>
        </member>
        <member name="P:NPiculet.Data.AbstractDbHelper.Command">
            <summary>
            DbCommand 对象。
            </summary>
        </member>
        <member name="P:NPiculet.Data.AbstractDbHelper.Adapter">
            <summary>
            DbDataAapter 对象。
            </summary>
        </member>
        <member name="T:NPiculet.Data.Field">
            <summary>
            字段对象，用于新增及更新操作中数据的传入。
            </summary>
        </member>
        <member name="M:NPiculet.Data.Field.#ctor(System.String,System.Object,System.Int32,DataType,System.String)">
            <summary>
            字段对象
            </summary>
            <param name="key">键名</param>
            <param name="val">值</param>
            <param name="size">大小</param>
            <param name="type">数据类型</param>
            <param name="alias">别名</param>
        </member>
        <member name="M:NPiculet.Data.Field.#ctor(System.String,System.String)">
            <summary>
            字段对象
            </summary>
            <param name="key">键名</param>
            <param name="alias">别名</param>
        </member>
        <member name="P:NPiculet.Data.Field.Key">
            <summary>
            键名。
            </summary>
        </member>
        <member name="P:NPiculet.Data.Field.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:NPiculet.Data.Field.Size">
            <summary>
            大小
            </summary>
        </member>
        <member name="P:NPiculet.Data.Field.Type">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:NPiculet.Data.Field.Alias">
            <summary>
            别名
            </summary>
        </member>
        <member name="T:NPiculet.Data.ServerType">
            <summary>
            数据库类型。
            </summary>
        </member>
        <member name="F:NPiculet.Data.ServerType.None">
            <summary>
            未设置。
            </summary>
        </member>
        <member name="F:NPiculet.Data.ServerType.SqlClient">
            <summary>
            Microsoft SQL Server 数据库的连接方式。
            </summary>
        </member>
        <member name="F:NPiculet.Data.ServerType.OleDb">
            <summary>
            Microsoft Access 数据库的连接方式。
            </summary>
        </member>
        <member name="F:NPiculet.Data.ServerType.OracleClient">
            <summary>
            Oracle 数据库的连接方式。
            </summary>
        </member>
        <member name="F:NPiculet.Data.ServerType.Odbc">
            <summary>
            ODBC 数据库的连接方式。
            </summary>
        </member>
        <member name="F:NPiculet.Data.ServerType.MySql">
            <summary>
            MySQL 数据库的连接方式。
            </summary>
        </member>
        <member name="F:NPiculet.Data.ServerType.Sqlite">
            <summary>
            SQLite 数据库的连接方式。
            </summary>
        </member>
        <member name="F:NPiculet.Data.ServerType.PgSql">
            <summary>
            PostgreSQL 数据库的连接方式
            </summary>
        </member>
        <member name="T:NPiculet.Data.ExecuteType">
            <summary>
            执行类型。
            </summary>
        </member>
        <member name="F:NPiculet.Data.ExecuteType.Insert">
            <summary>
            新增。
            </summary>
        </member>
        <member name="F:NPiculet.Data.ExecuteType.Update">
            <summary>
            更新。
            </summary>
        </member>
        <member name="F:NPiculet.Data.ExecuteType.Delete">
            <summary>
            删除。
            </summary>
        </member>
        <member name="F:NPiculet.Data.ExecuteType.None">
            <summary>
            不做操作。
            </summary>
        </member>
        <member name="T:NPiculet.Data.DeleteMode">
            <summary>
            删除模式。
            </summary>
        </member>
        <member name="F:NPiculet.Data.DeleteMode.Physical">
            <summary>
            物理删除。
            </summary>
        </member>
        <member name="F:NPiculet.Data.DeleteMode.Mark">
            <summary>
            标记删除。
            </summary>
        </member>
        <member name="T:NPiculet.Data.AbstractQueryObject">
            <summary>
            查询对象接口。
            </summary>
        </member>
        <member name="T:NPiculet.Data.IQueryObject">
            <summary>
            查询对象接口。
            </summary>
        </member>
        <member name="M:NPiculet.Data.IQueryObject.Add(System.String,System.Int32,DataType)">
            <summary>
            增加查询过程的字段对象。
            </summary>
            <param name="key">键名</param>
            <param name="size">大小</param>
            <param name="type">数据类型</param>
        </member>
        <member name="M:NPiculet.Data.IQueryObject.Add(System.String,DataType)">
            <summary>
            增加查询过程的字段对象。
            </summary>
            <param name="key">键名</param>
            <param name="type">数据类型</param>
        </member>
        <member name="M:NPiculet.Data.IQueryObject.Add(System.String)">
            <summary>
            增加查询过程的字段对象。
            </summary>
            <param name="key">键名</param>
        </member>
        <member name="M:NPiculet.Data.IQueryObject.Add(System.String,System.String)">
            <summary>
            增加查询过程的字段对象。
            </summary>
            <param name="key">键名</param>
            <param name="alias">别名</param>
        </member>
        <member name="M:NPiculet.Data.IQueryObject.Remove(System.String)">
            <summary>
            移除查询过程的值对象。
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:NPiculet.Data.IQueryObject.Clear">
            <summary>
            清理查询对象中的所有字段对象。
            </summary>
        </member>
        <member name="M:NPiculet.Data.IQueryObject.GetCountString">
            <summary>
            获取数据统计语句字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.IQueryObject.GetMaxString">
            <summary>
            获取字段中最大数字值字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.IQueryObject.GetMinString">
            <summary>
            获取字段中最小数字值字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.IQueryObject.GetSumString">
            <summary>
            获取字段值的统计字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.IQueryObject.GetQueryString">
            <summary>
            获取数据查询语句字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.IQueryObject.CloneEmpty">
            <summary>
            克隆一个空的新对象。
            </summary>
            <returns></returns>
        </member>
        <member name="P:NPiculet.Data.IQueryObject.ParmToken">
            <summary>
            参数标识符
            </summary>
        </member>
        <member name="P:NPiculet.Data.IQueryObject.CurrentPage">
            <summary>
            获取或设置当前页码。
            </summary>
        </member>
        <member name="P:NPiculet.Data.IQueryObject.PageSize">
            <summary>
            获取或设置分页大小。
            </summary>
        </member>
        <member name="P:NPiculet.Data.IQueryObject.TableName">
            <summary>
            获取或设置需要操作的数据表名称。
            </summary>
        </member>
        <member name="P:NPiculet.Data.IQueryObject.PrimaryKey">
            <summary>
            获取或设置数据表主键名称，在分页查询中将作为第二排序字段。
            </summary>
        </member>
        <member name="P:NPiculet.Data.IQueryObject.Fields">
            <summary>
            获取或设置查询字段。
            </summary>
        </member>
        <member name="P:NPiculet.Data.IQueryObject.Where">
            <summary>
            获取或设置查询条件。
            </summary>
        </member>
        <member name="P:NPiculet.Data.IQueryObject.OrderBy">
            <summary>
            获取或设置排序字段。
            </summary>
        </member>
        <member name="M:NPiculet.Data.AbstractQueryObject.Wrap(System.String)">
            <summary>
            包装字段名称
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractQueryObject.Add(System.String,System.Int32,DataType)">
            <summary>
            增加查询过程的字段对象。
            </summary>
            <param name="key">键名</param>
            <param name="size">大小</param>
            <param name="type">数据类型</param>
        </member>
        <member name="M:NPiculet.Data.AbstractQueryObject.Add(System.String,DataType)">
            <summary>
            增加查询过程的字段对象。
            </summary>
            <param name="key">键名</param>
            <param name="type">数据类型</param>
        </member>
        <member name="M:NPiculet.Data.AbstractQueryObject.Add(System.String)">
            <summary>
            增加查询过程的字段对象。
            </summary>
            <param name="key">键名</param>
        </member>
        <member name="M:NPiculet.Data.AbstractQueryObject.Add(System.String,System.String)">
            <summary>
            增加查询过程的字段对象。
            </summary>
            <param name="key">键名</param>
            <param name="alias">别名</param>
        </member>
        <member name="M:NPiculet.Data.AbstractQueryObject.Remove(System.String)">
            <summary>
            移除查询过程的值对象。
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:NPiculet.Data.AbstractQueryObject.Clear">
            <summary>
            清理查询对象中的所有字段对象。
            </summary>
        </member>
        <member name="M:NPiculet.Data.AbstractQueryObject.GetCountString">
            <summary>
            获取数据统计语句字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractQueryObject.GetMaxString">
            <summary>
            获取字段中最大数字值字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractQueryObject.GetMinString">
            <summary>
            获取字段中最小数字值字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractQueryObject.GetSumString">
            <summary>
            获取字段值的统计字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractQueryObject.GetQueryString">
            <summary>
            获取数据查询语句字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractQueryObject.CloneEmpty">
            <summary>
            克隆一个空的新对象。
            </summary>
            <returns></returns>
        </member>
        <member name="P:NPiculet.Data.AbstractQueryObject.ParmToken">
            <summary>
            参数标识符
            </summary>
        </member>
        <member name="P:NPiculet.Data.AbstractQueryObject.CurrentPage">
            <summary>
            获取或设置当前页码。
            </summary>
        </member>
        <member name="P:NPiculet.Data.AbstractQueryObject.PageSize">
            <summary>
            获取或设置分页大小。
            </summary>
        </member>
        <member name="P:NPiculet.Data.AbstractQueryObject.TableName">
            <summary>
            获取或设置需要操作的数据表名称。
            </summary>
        </member>
        <member name="P:NPiculet.Data.AbstractQueryObject.PrimaryKey">
            <summary>
            获取或设置数据表主键名称，在分页查询中将作为第二排序字段。
            </summary>
        </member>
        <member name="P:NPiculet.Data.AbstractQueryObject.Fields">
            <summary>
            获取或设置查询字段。
            </summary>
        </member>
        <member name="P:NPiculet.Data.AbstractQueryObject.Where">
            <summary>
            获取或设置查询条件。
            </summary>
        </member>
        <member name="P:NPiculet.Data.AbstractQueryObject.OrderBy">
            <summary>
            获取或设置排序字段。
            </summary>
        </member>
        <member name="T:DataType">
            <summary>
            数据类型。
            </summary>
        </member>
        <member name="F:DataType.Boolean">
            <summary>
            布尔型。
            </summary>
        </member>
        <member name="F:DataType.Byte">
            <summary>
            字节型。
            </summary>
        </member>
        <member name="F:DataType.DateTime">
            <summary>
            日期型。
            </summary>
        </member>
        <member name="F:DataType.Guid">
            <summary>
            Guid 型。
            </summary>
        </member>
        <member name="F:DataType.Int16">
            <summary>
            Int16 型。
            </summary>
        </member>
        <member name="F:DataType.Int32">
            <summary>
            Int32 型。
            </summary>
        </member>
        <member name="F:DataType.Int64">
            <summary>
            Int64 型。
            </summary>
        </member>
        <member name="F:DataType.Numeric">
            <summary>
            数值型。
            </summary>
        </member>
        <member name="F:DataType.String">
            <summary>
            字符串。
            </summary>
        </member>
        <member name="F:DataType.Text">
            <summary>
            长文本。
            </summary>
        </member>
        <member name="F:DataType.Xml">
            <summary>
            Xml 型。
            </summary>
        </member>
        <member name="F:DataType.Image">
            <summary>
            图像。
            </summary>
        </member>
        <member name="F:DataType.Object">
            <summary>
            对象。
            </summary>
        </member>
        <member name="F:DataType.None">
            <summary>
            不可知类型，默认使用字符串型处理。
            </summary>
        </member>
        <member name="T:NPiculet.Data.IExecuteObject">
            <summary>
            执行对象接口。
            </summary>
        </member>
        <member name="M:NPiculet.Data.IExecuteObject.Add(System.String,System.Object,System.Int32,DataType)">
            <summary>
            增加执行过程的值对象。
            </summary>
            <param name="key">键名</param>
            <param name="val">值</param>
            <param name="size">大小</param>
            <param name="type">数据类型</param>
        </member>
        <member name="M:NPiculet.Data.IExecuteObject.Add(System.String,System.Object,DataType)">
            <summary>
            增加执行过程的值对象。
            </summary>
            <param name="key">键名</param>
            <param name="val">值</param>
            <param name="type">数据类型</param>
        </member>
        <member name="M:NPiculet.Data.IExecuteObject.Add(System.String,System.Object)">
            <summary>
            增加执行过程的值对象。
            </summary>
            <param name="key">键名</param>
            <param name="val">值</param>
        </member>
        <member name="M:NPiculet.Data.IExecuteObject.Remove(System.String)">
            <summary>
            移除执行过程的值对象。
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:NPiculet.Data.IExecuteObject.Clear">
            <summary>
            清理执行对象中的所有值对象。
            </summary>
        </member>
        <member name="M:NPiculet.Data.IExecuteObject.GetExecuteSQL">
            <summary>
            获取执行字符串。
            </summary>
            <returns>执行字符串</returns>
        </member>
        <member name="M:NPiculet.Data.IExecuteObject.CreateInsertSQL">
            <summary>
            生成新增数据的 Sql 语句。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.IExecuteObject.CreateUpdateSQL">
            <summary>
            生成更新数据的 Sql 语句。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.IExecuteObject.CreateDeleteSQL">
            <summary>
            生成删除数据的 Sql 语句。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.IExecuteObject.CreateIdentitySQL">
            <summary>
            生成获取自动索引的 Sql 语句。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.IExecuteObject.CloneEmpty">
            <summary>
            克隆一个空的新的对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:NPiculet.Data.IExecuteObject.ParmToken">
            <summary>
            参数标识符
            </summary>
        </member>
        <member name="P:NPiculet.Data.IExecuteObject.TableName">
            <summary>
            获取或设置需要操作的数据表名称。
            </summary>
        </member>
        <member name="P:NPiculet.Data.IExecuteObject.PrimaryKey">
            <summary>
            获取或设置数据表主键名称。
            </summary>
        </member>
        <member name="P:NPiculet.Data.IExecuteObject.PrimaryValue">
            <summary>
            获取或设置数据表主键值。
            </summary>
        </member>
        <member name="P:NPiculet.Data.IExecuteObject.AutoColumns">
            <summary>
            获取或设置主键值是否由数据库自动生成。
            </summary>
        </member>
        <member name="P:NPiculet.Data.IExecuteObject.Where">
            <summary>
            获取或设置执行条件。
            </summary>
        </member>
        <member name="P:NPiculet.Data.IExecuteObject.ExecuteType">
            <summary>
            获取或设置执行类型。
            </summary>
        </member>
        <member name="P:NPiculet.Data.IExecuteObject.Fields">
            <summary>
            获取值对象列表。
            </summary>
        </member>
        <member name="M:NPiculet.Data.IDbExe.CreateEmptyExecuteObject">
            <summary>
            创建一个空的执行对象。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.IDbExe.CreateExecuteObject(System.Object)">
            <summary>
            根据数据模型创建执行对象。
            </summary>
            <param name="model">数据模型</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.IDbExe.Submit(System.Object)">
            <summary>
            提交数据。
            </summary>
            <param name="model">数据模型</param>
        </member>
        <member name="M:NPiculet.Data.IDbExe.Delete(System.Object)">
            <summary>
            删除数据。
            </summary>
            <param name="model">数据模型</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Data.AbstractExecuteObject">
            <summary>
            执行对象接口。
            </summary>
        </member>
        <member name="M:NPiculet.Data.AbstractExecuteObject.Wrap(System.String)">
            <summary>
            包装字段名称
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractExecuteObject.Add(System.String,System.Object,System.Int32,DataType)">
            <summary>
            增加执行过程的值对象。
            </summary>
            <param name="key">键名</param>
            <param name="val">值</param>
            <param name="size">大小</param>
            <param name="type">数据类型</param>
        </member>
        <member name="M:NPiculet.Data.AbstractExecuteObject.Add(System.String,System.Object,DataType)">
            <summary>
            增加执行过程的值对象。
            </summary>
            <param name="key">键名</param>
            <param name="val">值</param>
            <param name="type">数据类型</param>
        </member>
        <member name="M:NPiculet.Data.AbstractExecuteObject.Add(System.String,System.Object)">
            <summary>
            增加执行过程的值对象。
            </summary>
            <param name="key">键名</param>
            <param name="val">值</param>
        </member>
        <member name="M:NPiculet.Data.AbstractExecuteObject.Remove(System.String)">
            <summary>
            移除执行过程的值对象。
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:NPiculet.Data.AbstractExecuteObject.Clear">
            <summary>
            清理执行对象中的所有值对象。
            </summary>
        </member>
        <member name="M:NPiculet.Data.AbstractExecuteObject.GetExecuteSQL">
            <summary>
            获取执行字符串。
            </summary>
            <returns>执行字符串</returns>
        </member>
        <member name="M:NPiculet.Data.AbstractExecuteObject.CreateInsertSQL">
            <summary>
            生成新增数据的 Sql 语句。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractExecuteObject.CreateUpdateSQL">
            <summary>
            生成更新数据的 Sql 语句。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractExecuteObject.CreateDeleteSQL">
            <summary>
            生成删除数据的 Sql 语句。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractExecuteObject.CreateIdentitySQL">
            <summary>
            生成获取自动增长ID的 Sql 语句。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.AbstractExecuteObject.CloneEmpty">
            <summary>
            克隆一个新的对象。
            </summary>
            <returns></returns>
        </member>
        <member name="P:NPiculet.Data.AbstractExecuteObject.ParmToken">
            <summary>
            参数标识符
            </summary>
        </member>
        <member name="P:NPiculet.Data.AbstractExecuteObject.TableName">
            <summary>
            获取或设置需要操作的数据表名称。
            </summary>
        </member>
        <member name="P:NPiculet.Data.AbstractExecuteObject.PrimaryKey">
            <summary>
            获取或设置数据表主键名称。
            </summary>
        </member>
        <member name="P:NPiculet.Data.AbstractExecuteObject.PrimaryValue">
            <summary>
            获取或设置数据表主键值。
            </summary>
        </member>
        <member name="P:NPiculet.Data.AbstractExecuteObject.AutoColumns">
            <summary>
            标识哪些字段的值是自动生成的。
            </summary>
        </member>
        <member name="P:NPiculet.Data.AbstractExecuteObject.Where">
            <summary>
            获取或设置执行条件。
            </summary>
        </member>
        <member name="P:NPiculet.Data.AbstractExecuteObject.ExecuteType">
            <summary>
            获取或设置执行类型。
            </summary>
        </member>
        <member name="P:NPiculet.Data.AbstractExecuteObject.Fields">
            <summary>
            获取值对象列表。
            </summary>
        </member>
        <member name="T:NPiculet.Data.DbHelper">
            <summary>
            数据库的通用操作辅助类。
            </summary>
        </member>
        <member name="F:NPiculet.Data.DbHelper.namespaceString">
            <summary>
            固定命名空间
            </summary>
        </member>
        <member name="M:NPiculet.Data.DbHelper.GetServerType(System.String)">
            <summary>
            获取数据库服务类型
            </summary>
            <param name="connKey"></param>
            <returns></returns>
        </member>
        <member name="F:NPiculet.Data.DbHelper._prefixDict">
            <summary>
            数据类型的前缀
            </summary>
        </member>
        <member name="M:NPiculet.Data.DbHelper.GetInstanceClassName(NPiculet.Data.ServerType)">
            <summary>
            根据数据库类型获取类型名称
            </summary>
            <param name="serverType"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.DbHelper.Create(NPiculet.Data.ServerType,System.String)">
            <summary>
            创建数据库实例。
            </summary>
            <param name="serverType">数据服务器类型</param>
            <param name="connString">数据连接字符串</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.DbHelper.Create(System.String)">
            <summary>
            创建数据库实例。
            </summary>
            <param name="connKey">连接配置名称</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.DbHelper.Create">
            <summary>
            创建数据库实例。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.DbHelper.CreateEmptyExecuteObject(NPiculet.Data.ExecuteType,System.String)">
            <summary>
            创建一个空的执行对象。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.DbHelper.CreateExecuteObject(NPiculet.Data.ExecuteType,System.Object)">
            <summary>
            根据数据模型创建执行对象。
            </summary>
            <param name="type">执行对象类型</param>
            <param name="model">数据模型</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.DbHelper.CreateEmptyQueryObject(System.String)">
            <summary>
            创建一个空的执行对象。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.DbHelper.CreateQueryObject(System.Object)">
            <summary>
            根据数据模型创建执行对象。
            </summary>
            <param name="model">数据模型</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.DbHelper.QueryDataSet(System.String)">
            <summary>
            查询并返回 DataSet 对象。
            </summary>
            <param name="sql">SQL 语句</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.DbHelper.Query(System.String)">
            <summary>
            查询并返回 DataTable 对象。
            </summary>
            <param name="sql">SQL 语句</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.DbHelper.QueryValue(System.String)">
            <summary>
            查询并返回数据表第一行、第一列的值。
            </summary>
            <param name="sql">SQL 语句</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.DbHelper.Execute(System.String,System.Data.CommandType,System.String,System.Data.IDbDataParameter[])">
            <summary>
            执行数据库操作，并返回影响行数。
            </summary>
            <param name="sql">SQL 语句</param>
            <param name="type">指令类型</param>
            <param name="connKey">数据库连接配置名称</param>
            <param name="parms">参数</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.DbHelper.Execute(System.String,System.Data.IDbDataParameter[])">
            <summary>
            执行数据库操作，并返回影响行数。
            </summary>
            <param name="sql">SQL 语句</param>
            <param name="parms">参数</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.DbHelper.Execute(System.Collections.Generic.Queue{System.String},System.Data.CommandType,System.String,System.Data.IDbDataParameter[])">
            <summary>
            批量执行数据库操作，如果出错会回滚操作。
            </summary>
            <param name="queue">SQL 语句队列</param>
            <param name="connKey">数据库连接字符串</param>
            <param name="type">指令类型</param>
            <param name="parms">参数</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.DbHelper.Execute(System.Collections.Generic.Queue{System.String},System.Data.IDbDataParameter[])">
            <summary>
            执行数据库操作，并返回影响行数。
            </summary>
            <param name="queue">队列语句</param>
            <param name="parms">参数</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.DbHelper.ConvertSqlServerType(System.String)">
            <summary>
            转换 SQLServer 中字段类型。
            </summary>
            <param name="type">类型名称</param>
            <returns></returns>
        </member>
        <member name="P:NPiculet.Data.DbHelper.DefaultConnectionKey">
            <summary>
            获取数据库连接字符串的索引键名称。
            </summary>
        </member>
        <member name="P:NPiculet.Data.DbHelper.DefaultConnectionType">
            <summary>
            获取数据库类型。
            </summary>
            <returns></returns>
        </member>
        <member name="P:NPiculet.Data.DbHelper.DefaultConnectionString">
            <summary>
            获取数据库连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.MySqlQueryObject.GetCountString">
            <summary>
            获取统计字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.MySqlQueryObject.GetMaxString">
            <summary>
            获取最大值字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.MySqlQueryObject.GetMinString">
            <summary>
            获取最小值字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.MySqlQueryObject.GetSumString">
            <summary>
            获取统计字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.MySqlQueryObject.GetQueryString">
            <summary>
            获取查询字符串,没有定义主键时,必须指定排序字段。
            </summary>
            <returns></returns>
        </member>
        <member name="P:NPiculet.Data.MySqlQueryObject.ParmToken">
            <summary>
            参数标识符。
            </summary>
        </member>
        <member name="M:NPiculet.Data.MySqlExecuteObject.CreateInsertSQL">
            <summary>
            创建新增字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.MySqlExecuteObject.CreateUpdateSQL">
            <summary>
            创建更新字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.MySqlExecuteObject.CreateDeleteSQL">
            <summary>
            创建删除字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.MySqlExecuteObject.CreateIdentitySQL">
            <summary>
            创新获取自动ID字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.MySqlExecuteObject.CloneEmpty">
            <summary>
            克隆一个新对象。
            </summary>
            <returns></returns>
        </member>
        <member name="P:NPiculet.Data.MySqlExecuteObject.ParmToken">
            <summary>
            参数标识符。
            </summary>
        </member>
        <member name="M:NPiculet.Data.MySqlHelper.CreateConnection(System.String)">
            <summary>
            创建数据库连接对象。
            </summary>
            <param name="connString">连接字符串</param>
            <returns>数据库连接对象</returns>
        </member>
        <member name="M:NPiculet.Data.MySqlHelper.CreateDataAdapter">
            <summary>
            创建数据适配器。
            </summary>
            <returns>数据适配器</returns>
        </member>
        <member name="M:NPiculet.Data.MySqlHelper.BatchInsert(System.Data.DataTable,System.String,System.String)">
            <summary>
            批量插入数据。
            </summary>
            <param name="dataTable">数据表</param>
            <param name="tableName">要插入的数据表名称</param>
            <param name="connKey">连接配置名称</param>
        </member>
        <member name="M:NPiculet.Data.MySqlHelper.CloneNew">
            <summary>
            克隆一个新对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Data.MySqlHelper.GetDataValue(System.Object)">
            <summary>
            获取数据值，并预处理
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Log.LogProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
            <summary>
            增加一个提供器到集合。
            </summary>
            <param name="provider"></param>
        </member>
        <member name="P:NPiculet.Log.LogProviderCollection.Item(System.String)">
            <summary>
            根据提供器名称获取实例。
            </summary>
            <param name="name">提供器名称</param>
        </member>
        <member name="M:NPiculet.Log.LogProvider.IsNullableType(System.Type)">
            <summary>
            判断类似是否为 Nullable 类型。
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Log.LogProvider.ConvertValue``1(System.Object,``0)">
            <summary>
            将值转为指定的数据类型。
            </summary>
            <param name="val">需要转换类型的值</param>
            <param name="defaultValue">数据类型</param>
        </member>
        <member name="M:NPiculet.Log.LogProvider.ConvertToFullPath(System.String)">
            <summary>
            转换为完整路径。
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="P:NPiculet.Log.LogProvider.Name">
            <summary>
            提供器名称
            </summary>
        </member>
        <member name="P:NPiculet.Log.LogProvider.Address">
            <summary>
            日志储存地址
            </summary>
        </member>
        <member name="P:NPiculet.Log.LogProvider.ApplicationBaseDirectory">
            <summary>
            获取应用程序基础路径。
            </summary>
        </member>
        <member name="M:NPiculet.Log.XmlLogProvider.SetAttr(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            设置属性。
            </summary>
            <param name="node">节点</param>
            <param name="attr">属性</param>
            <param name="val">值</param>
        </member>
        <member name="M:NPiculet.Log.XmlLogProvider.SetText(System.Xml.XmlNode,System.String)">
            <summary>
            设置节点的文本。
            </summary>
            <param name="node"></param>
            <param name="val"></param>
        </member>
        <member name="M:NPiculet.Log.Logger.LoadProviders">
            <summary>
            从 web.config 中获取提供器集合。
            </summary>
        </member>
        <member name="P:NPiculet.Log.LogProviderSection.DefaultProvider">
            <summary>
            获取默认提供器名称。
            </summary>
        </member>
        <member name="P:NPiculet.Log.LogProviderSection.Providers">
            <summary>
            获取注册的提供器集合。
            </summary>
        </member>
        <member name="T:NPiculet.Draw2D.VerifyCode">
            <summary>
            生成验证码图片。
            </summary>
        </member>
        <member name="M:NPiculet.Draw2D.VerifyCode.Create(System.Int32,System.Int32,System.String@)">
            <summary>
            获取验证码对象。
            </summary>
            <param name="charNumber">验证字符数</param>
            <param name="mixNumber">背景杂点数</param>
            <param name="outValue">返回值</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Toolkit.JsonKit">
            <summary>
            JSON 工具集
            </summary>
        </member>
        <member name="M:NPiculet.Toolkit.JsonKit.Serialize``1(``0)">
            <summary>
            序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.JsonKit.SerializeDynamic(System.Object)">
            <summary>
            序列化动态对象
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.JsonKit.Deserialize``1(System.String)">
            <summary>
            反序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.JsonKit.DeserializeDynamic(System.String)">
            <summary>
            反序列化动态对象
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Toolkit.UnixDateTimeConverter">
            <summary>
            用于 Json.Net 的日期转换器
            </summary>
        </member>
        <member name="M:NPiculet.Toolkit.SystemKit.IsNullableType(System.Type)">
            <summary>
            判断类似是否为 Nullable 类型。
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.SystemKit.ConvertToFullPath(System.String)">
            <summary>
            转换为完整路径。
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="P:NPiculet.Toolkit.SystemKit.ApplicationBaseDirectory">
            <summary>
            获取应用程序基础路径。
            </summary>
        </member>
        <member name="T:NPiculet.Toolkit.ProtoBufKit">
            <summary>
            Google Protocol Buffer 工具集
            </summary>
        </member>
        <member name="M:NPiculet.Toolkit.ProtoBufKit.Serialize``1(``0)">
            <summary>
            序列化，并返回二进制流
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.ProtoBufKit.Serialize``1(System.IO.Stream,``0)">
            <summary>
            用指定的流容器序列化对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="stream"></param>
            <param name="obj"></param>
        </member>
        <member name="M:NPiculet.Toolkit.ProtoBufKit.SerializeBase64``1(``0)">
            <summary>
            序列化，并返回二进制流编码后的 Base64 字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.ProtoBufKit.Deserialize``1(System.Byte[])">
            <summary>
            反序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.ProtoBufKit.Deserialize``1(System.IO.Stream)">
            <summary>
            读取指定的流容器反序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.ProtoBufKit.DeserializeBase64``1(System.String)">
            <summary>
            根据二进制流编码后的 Base64 字符串，反序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="base64str"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Draw2D.HitKit.TestPointInRectangle(System.Drawing.Point,System.Drawing.Rectangle)">
            <summary>
            检测点是否在矩形内
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Draw2D.HitKit.TestPointInCircle(System.Drawing.Point,System.Drawing.Point,System.Double)">
            <summary>
            检测点是否在圆形内
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Xml.XmlDocumentExtension.LoadFromFile(System.Xml.XmlDocument,System.String)">
            <summary>
            从文件读取 XML 文件。
            </summary>
            <param name="xml"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:System.Xml.XmlDocumentExtension.SaveToFile(System.Xml.XmlDocument,System.String)">
            <summary>
            从文件读取 XML 文件。
            </summary>
            <param name="xml"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:System.Xml.XmlDocumentExtension.GetText(System.Xml.XmlDocument,System.String)">
            <summary>
            获取节点的文本。
            </summary>
            <param name="xml"></param>
            <param name="xpath"></param>
            <returns></returns>
        </member>
        <member name="M:System.Xml.XmlDocumentExtension.SetText(System.Xml.XmlDocument,System.String,System.String)">
            <summary>
            设置节点的文本。
            </summary>
            <param name="xml"></param>
            <param name="xpath"></param>
            <param name="val"></param>
        </member>
        <member name="M:System.Xml.XmlDocumentExtension.CreateNode(System.Xml.XmlDocument,System.String,System.String,System.String)">
            <summary>
            创建节点。
            </summary>
            <param name="xml"></param>
            <param name="parentPath"></param>
            <param name="name"></param>
            <param name="val"></param>
        </member>
        <member name="T:NPiculet.Toolkit.StringExtension">
            <summary>
            字符串或数值的通用处理管理器。
            </summary>
        </member>
        <member name="M:NPiculet.Toolkit.StringExtension.IsNumeric(System.String)">
            <summary>
            检查字符串是否由数字组成。
            </summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringExtension.IsInt(System.String)">
            <summary>
            检查字符串是否由整数组成。
            </summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringExtension.Left(System.String,System.Int32)">
            <summary>
            从左至右截取指定长度的字符串。
            </summary>
            <param name="str">字符串</param>
            <param name="len">截取长度</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringExtension.Left(System.String,System.Int32,System.String)">
            <summary>
            从左至右截取指定长度的字符串。
            </summary>
            <param name="str">字符串</param>
            <param name="len">截取长度</param>
            <param name="omission">省略符号</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringExtension.Right(System.String,System.Int32)">
            <summary>
            从右至左截取指定长度的字符串。
            </summary>
            <param name="str">字符串</param>
            <param name="len">截取长度</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringExtension.ToShortDateString(System.DateTime)">
            <summary>
            返回短日期的文本。
            </summary>
            <param name="date">日期</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringExtension.ToShortDateTimeString(System.DateTime)">
            <summary>
            返回格式化的日期和短时间文本。
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringExtension.ToRomanDateString(System.DateTime)">
            <summary>
            返回格式化的日期和短时间文本。
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringExtension.ToPositiveInt(System.Int32)">
            <summary>
            返回正整数，若值小于1，则返回整数0。
            </summary>
            <param name="i">整数值</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringExtension.ToPositiveInt(System.String)">
            <summary>
            根据字符串返回正整数，若值非数字或小于1，则返回整数0。
            </summary>
            <param name="input">内容为整数值的字符串</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringExtension.ToSqlParm(System.String)">
            <summary>
            检查提交内容并替换关键字符，使其符合写入数据库的规范。
            </summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringExtension.FormatSqlParm(System.String)">
            <summary>
            检查提交内容并替换关键字符，使其符合写入数据库的规范。
            </summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringExtension.FormatHtml(System.String)">
            <summary>
            将内容格式化为标准的 HTML。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringExtension.FormatJson(System.String)">
            <summary>
            将字符串中的特殊符号格式化为Json认可的格式。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringExtension.ClearHtmlTag(System.String)">
            <summary>
            清理 HTML 标签。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Draw2D.GeometryKit">
            <summary>
            几何工具
            </summary>
        </member>
        <member name="M:NPiculet.Draw2D.GeometryKit.GetTwoPointDistance(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            获取两点之间的距离
            </summary>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Toolkit.EncryptKit">
            <summary>
            加解密管理器。
            </summary>
        </member>
        <member name="M:NPiculet.Toolkit.EncryptKit.ToMD5(System.Byte[])">
            <summary>
            使用 MD5 算法加密数据流。
            </summary>
            <param name="bytes">输入加密数据流</param>
            <returns>加密后的字符串</returns>
        </member>
        <member name="M:NPiculet.Toolkit.EncryptKit.ToMD5(System.String)">
            <summary>
            使用 MD5 算法加密字符串。
            </summary>
            <param name="str">输入字符串</param>
            <returns>加密后的字符串</returns>
        </member>
        <member name="M:NPiculet.Toolkit.EncryptKit.ToSHA1(System.Byte[])">
            <summary>
            使用 SHA1 算法加密数据流。
            </summary>
            <param name="bytes">输入加密数据流</param>
            <returns>加密后的字符串</returns>
        </member>
        <member name="M:NPiculet.Toolkit.EncryptKit.ToSHA1(System.String)">
            <summary>
            使用 SHA1 算法加密字符串。
            </summary>
            <param name="str">输入字符串</param>
            <returns>加密后的字符串</returns>
        </member>
        <member name="M:NPiculet.Toolkit.EncryptKit.ToHMACSHA1(System.Byte[],System.Byte[])">
            <summary>
            使用 HMAC SHA1 算法加密数据流。
            </summary>
            <param name="key">密匙</param>
            <param name="bytes">数据流</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.EncryptKit.ToHMACSHA1(System.Byte[])">
            <summary>
            使用 HMAC SHA1 算法加密数据流。
            </summary>
            <param name="bytes">数据流</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.EncryptKit.ToHMACSHA1(System.String,System.String)">
            <summary>
            使用 HMAC SHA1 算法加密字符串。
            </summary>
            <param name="key">密匙</param>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.EncryptKit.ToHMACSHA1(System.String)">
            <summary>
            使用 HMAC SHA1 算法加密字符串。
            </summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.EncryptKit.EncodeBase64(System.String)">
            <summary>
            编码为 Base64 字符串。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.EncryptKit.DecodeBase64(System.String)">
            <summary>
            将 Base64 字符串解码。
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.EncryptKit.EncryptDES(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            DES加密字符串
            </summary>
            <param name="rgbKey">加密密钥，长度8位</param>
            <param name="rgbIV"></param>
            <param name="buffer">待加密的数据流</param>
            <returns>加密成功返回加密后的数据流，失败返回空值</returns>
        </member>
        <member name="M:NPiculet.Toolkit.EncryptKit.EncryptDES(System.String,System.String,System.String)">
            <summary>
            DES加密字符串
            </summary>
            <param name="encryptKey">加密密钥，长度8位</param>
            <param name="encryptIV">长度8位</param>
            <param name="encryptString">待加密的数据流</param>
            <returns>加密成功返回加密后的数据流，失败返回空值</returns>
        </member>
        <member name="M:NPiculet.Toolkit.EncryptKit.EncryptDES(System.String,System.String)">
            <summary>
            DES加密字符串
            </summary>
            <param name="encryptString">待加密的字符串</param>
            <param name="encryptKey">加密密钥，长度8位</param>
            <returns>加密成功返回加密后的字符串，失败返回空值</returns>
        </member>
        <member name="M:NPiculet.Toolkit.EncryptKit.DecryptDES(System.String,System.String)">
            <summary>
             DES解密字符串
             </summary>
             <param name="decryptString">待解密的字符串</param>
             <param name="decryptKey">解密密钥，长度8位，和加密密钥相同</param>
             <returns>解密成功返回解密后的字符串，失败返空值</returns>
        </member>
        <member name="T:NPiculet.Toolkit.EnumText">
            <summary>
            枚举说明属性
            </summary>
        </member>
        <member name="T:NPiculet.Toolkit.EnumKit">
            <summary>
            枚举工具
            </summary>
        </member>
        <member name="M:NPiculet.Toolkit.EnumKit.ToList(System.Type)">
            <summary>
            转换为枚举项列表
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.EnumKit.ToText(System.Enum)">
            <summary>
            转换为枚举说明
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.EnumKit.ToEnumItem(System.Enum)">
            <summary>
            转换为枚举项
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.ConvertKit.ConvertValue``1(System.Object,``0)">
            <summary>
            将值转为指定的数据类型。
            </summary>
            <param name="val">需要转换类型的值</param>
            <param name="defaultValue">数据类型</param>
        </member>
        <member name="M:NPiculet.Toolkit.ConvertKit.ConvertValue(System.Object,System.Type)">
            <summary>
            转换当前模型中子项的值。
            </summary>
            <param name="val">需要转换类型的值</param>
            <param name="type">数据类型</param>
        </member>
        <member name="M:NPiculet.Toolkit.ConvertKit.ConvertValue``1(System.Object)">
            <summary>
            转换当前模型中子项的值。
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="val">需要转换类型的值</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.ConvertKit.GetDefault``1">
            <summary>
            获取某个类型的默认值
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.ConvertKit.GetDefault(System.Type)">
            <summary>
            获取某个类型的默认值
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Xml.XmlNodeExtension.GetText(System.Xml.XmlNode)">
            <summary>
            获取节点的文本。
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:System.Xml.XmlNodeExtension.GetText``1(System.Xml.XmlNode)">
            <summary>
            获取节点的文本并转换为指定值。
            </summary>
            <param name="node">节点</param>
            <returns></returns>
        </member>
        <member name="M:System.Xml.XmlNodeExtension.SetText(System.Xml.XmlNode,System.String)">
            <summary>
            设置节点的文本。
            </summary>
            <param name="node"></param>
            <param name="val"></param>
        </member>
        <member name="M:System.Xml.XmlNodeExtension.GetAttr(System.Xml.XmlNode,System.String)">
            <summary>
            获取属性。
            </summary>
            <param name="node">节点</param>
            <param name="attr">属性</param>
            <returns></returns>
        </member>
        <member name="M:System.Xml.XmlNodeExtension.GetAttr``1(System.Xml.XmlNode,System.String)">
            <summary>
            获取属性并转换为指定值。
            </summary>
            <param name="node">节点</param>
            <param name="attr">属性</param>
            <returns></returns>
        </member>
        <member name="M:System.Xml.XmlNodeExtension.SetAttr(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            设置属性。
            </summary>
            <param name="node">节点</param>
            <param name="attr">属性</param>
            <param name="val">值</param>
        </member>
        <member name="M:System.Xml.XmlObjectConvert.GetValue(System.Reflection.PropertyInfo,System.Object)">
            <summary>
            根据特性信息转换当前模型中子项的值。
            </summary>
            <param name="info">模型子项的结构信息</param>
            <param name="val">需要转换类型的值</param>
        </member>
        <member name="M:System.Xml.XmlObjectConvert.ConvertToModel``1(System.Xml.XmlDocument,System.String,System.String[])">
            <summary>
            转换XML文档为数据模型。
            </summary>
            <param name="xml">XML文档</param>
            <param name="rootPath">根节点路径</param>
            <param name="filter">过滤属性名称</param>
        </member>
        <member name="M:System.Xml.XmlObjectConvert.ConvertToModelList``1(System.Xml.XmlDocument,System.String,System.String[])">
            <summary>
            转换XML文档为数据模型。
            </summary>
            <param name="xml">XML文档</param>
            <param name="rootPath">根节点路径</param>
            <param name="filter">过滤属性名称</param>
        </member>
        <member name="M:System.Xml.XmlObjectConvert.ConvertToXml(System.Object)">
            <summary>
            转换数据模型为XML文档。
            </summary>
            <param name="model">数据模型</param>
        </member>
        <member name="M:System.Xml.XmlObjectConvert.FillXmlProperties(System.Object,System.Xml.XmlDocument,System.Xml.XmlNode)">
            <summary>
            获取属性
            </summary>
            <param name="model"></param>
            <param name="xml"></param>
            <param name="root"></param>
        </member>
        <member name="M:System.Xml.XmlObjectConvert.FillXmlFields(System.Object,System.Xml.XmlDocument,System.Xml.XmlNode)">
            <summary>
            获取字段
            </summary>
            <param name="model"></param>
            <param name="xml"></param>
            <param name="root"></param>
        </member>
        <member name="M:System.Xml.XmlObjectConvert.ConvertToString(System.Xml.XmlDocument,System.Text.Encoding)">
            <summary>
            将 XML 文档转换为字符串
            </summary>
            <param name="xml"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:System.Xml.XmlObjectConvert.ConvertToString(System.Xml.XmlDocument)">
            <summary>
            将 XML 文档转换为字符串
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:System.Xml.XmlObjectConvert.ConvertToString(System.Object)">
            <summary>
            将对象转换为 XML 字符串
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Toolkit.StringKit">
            <summary>
            随机数字及随机字符串管理器。
            </summary>
        </member>
        <member name="M:NPiculet.Toolkit.StringKit.GetRandomString(System.Int32)">
            <summary>
            产生一个由英文字母和数字组成的随机字符串。
            </summary>
            <param name="n">产生的字符个数</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringKit.GetRandomStringHex(System.Int32)">
            <summary>
            产生一个由英文字母和数字组成的随机字符串。
            </summary>
            <param name="n">产生的字符个数</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringKit.GetRandomNumber(System.Int32)">
            <summary>
            产生一个随机数字。
            </summary>
            <param name="max">产生的最大数字</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringKit.GetRandomNumber(System.Int32,System.Int32)">
            <summary>
            产生一个随机数字。
            </summary>
            <param name="min">产生的最小数字</param>
            <param name="max">产生的最大数字</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringKit.GetRandomStringByNumber(System.Int32)">
            <summary>
            产生一个固定长度，并且由数字组成的随机字符串。
            </summary>
            <param name="length">产生的字符长度</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringKit.GetRandomStringByNumber(System.Int32,System.Int32)">
            <summary>
            产生一个固定长度，并且由数字组成的随机字符串。
            </summary>
            <param name="max">产生的最大数字</param>
            <param name="length">产生的字符长度</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringKit.GetRandomStringByNumber(System.Int32,System.Int32,System.Int32)">
            <summary>
            产生一个固定长度，并且由数字组成的随机字符串。
            </summary>
            <param name="min">产生的最小数字</param>
            <param name="max">产生的最大数字</param>
            <param name="length">产生的字符长度</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringKit.GetStringByDateTime(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            根据当前时间产生一个17位的由日期和时间组成的字符串，精确到毫秒。
            </summary>
            <param name="includeYear">包含年</param>
            <param name="includeMonth">包含月</param>
            <param name="includeDay">包含日</param>
            <param name="includeTime">包含时间</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringKit.GetStringByShortDate(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            根据当前时间产生一个9位的由日期和时间组成的短字符串，第一位起始字母A代表2010年，其中年、月、时均用英文字母表示，以此类推。
            </summary>
            <param name="includeYear">包含年</param>
            <param name="includeMonth">包含月</param>
            <param name="includeDay">包含日</param>
            <param name="includeTime">包含时间</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StringKit.GetGUID(System.Boolean)">
            <summary>
            获取一个新的 GUID 字符串
            </summary>
            <param name="upper">是否大写</param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Toolkit.EnumItem">
            <summary>
            枚举项
            </summary>
        </member>
        <member name="T:NPiculet.Toolkit.RegexExtension">
            <summary>
            正则表达式管理器。
            </summary>
        </member>
        <member name="M:NPiculet.Toolkit.RegexExtension.Test(System.String,System.String)">
            <summary>
            检查字符串是否包含正则表达式验证的内容。
            </summary>
            <param name="str">将要验证的字符串</param>
            <param name="regexStr">正则表达式</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.RegexExtension.GetMatch(System.String,System.String)">
            <summary>
            返回正则表达式所匹配的内容。
            </summary>
            <param name="str">将要验证的字符串</param>
            <param name="regexStr">正则表达式</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.RegexExtension.GetMatches(System.String,System.String)">
            <summary>
            返回正则表达式所匹配的内容集合。
            </summary>
            <param name="str"></param>
            <param name="regexStr"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.RegexExtension.Replace(System.String,System.String,System.String)">
            <summary>
            返回正则表达式所替换的内容。
            </summary>
            <param name="str">将要替换的字符串</param>
            <param name="regexStr">正则表达式</param>
            <param name="replaceStr">替换结果的字符串</param>
            <returns>替换完成的字符串</returns>
        </member>
        <member name="M:NPiculet.Toolkit.RegexExtension.GetUrl(System.String)">
            <summary>
            返回内容中包含的 Url 字符串的集合。
            </summary>
            <param name="str">内容</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.RegexExtension.IsUrl(System.String)">
            <summary>
            检查字符串是否为一个 Url。
            </summary>
            <param name="str">内容</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.RegexExtension.GetImages(System.String)">
            <summary>
            返回内容中包含的图片地址的集合。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.RegexExtension.IsImageUrl(System.String)">
            <summary>
            检查字符串是否为一个图片链接。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Draw2D.ImageBuilder">
            <summary>
            图片处理类，主要用于缩放图片及生成水印。
            </summary>
        </member>
        <member name="M:NPiculet.Draw2D.ImageBuilder.MakeThumbnailImage(System.Int32,System.Int32,System.Boolean)">
            <summary>
            生成缩略图。
            </summary>
            <param name="w">新宽</param>
            <param name="h">新高</param>
            <param name="autuStretching">是否自动拉伸</param>
            <returns>缩略图</returns>
        </member>
        <member name="M:NPiculet.Draw2D.ImageBuilder.MakeZoomImage(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            生成缩放的图片。
            </summary>
            <param name="w">新宽</param>
            <param name="h">新高</param>
            <param name="autoEnlarge">是否自动放大</param>
            <param name="autoPadding">是否自动填充空白区域</param>
            <param name="autuStretching">是否自动拉伸</param>
            <param name="cutPicture">当长宽不符合比例时，是否剪切图片</param>
        </member>
        <member name="M:NPiculet.Draw2D.ImageBuilder.GetZoomImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            获取缩放的图片。
            </summary>
            <param name="img">原图</param>
            <param name="img_w">原图宽</param>
            <param name="img_h">原图高</param>
            <param name="w">新宽</param>
            <param name="h">新高</param>
            <param name="autoEnlarge">是否自动放大</param>
            <param name="autoPadding">是否自动填充空白区域</param>
            <param name="autuStretching">是否自动拉伸</param>
            <param name="cutPicture">当长宽不符合比例时，是否剪切图片</param>
            <returns>缩放后的图片</returns>
        </member>
        <member name="M:NPiculet.Draw2D.ImageBuilder.MakeWatermarkText(System.String,System.Single,System.Int32,System.Single,System.Single)">
            <summary>
            添加文字水印。
            </summary>
            <param name="text">水印文字</param>
            <param name="pound">文字磅值</param>
            <param name="alpha">透明度</param>
            <param name="x">文字X坐标</param>
            <param name="y">文字Y坐标</param>
        </member>
        <member name="M:NPiculet.Draw2D.ImageBuilder.SaveImage(System.String)">
            <summary>
            保存为 Jpeg 图片。
            </summary>
            <param name="savePath">保存路径</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Draw2D.ImageBuilder.Clear">
            <summary>
            清除生成的对象的内容，但保留源 Image 对象。
            </summary>
        </member>
        <member name="M:NPiculet.Draw2D.ImageBuilder.Dispose">
            <summary>
            销毁所有 Image 对象，释放资源。
            </summary>
        </member>
        <member name="P:NPiculet.Draw2D.ImageBuilder.GetImage">
            <summary>
            获取或设置一个 Image 对象。
            </summary>
        </member>
        <member name="M:NPiculet.Toolkit.JsonExtension.CustomObjectToJson``1(``0,System.String[])">
            <summary>
            处理自定义对象类
            </summary>
            <returns></returns>
        </member>
        <member name="T:NPiculet.WebAPI.ResultRender">
            <summary>
            结果渲染器
            </summary>
        </member>
        <member name="M:NPiculet.WebAPI.ResultRender.#ctor(System.Web.HttpContext,NPiculet.WebAPI.ResultFormat)">
            <summary>
            构造函数
            </summary>
            <param name="context"></param>
            <param name="format"></param>
        </member>
        <member name="M:NPiculet.WebAPI.ResultRender.StatePush(System.String,System.String)">
            <summary>
            添加一个状态参数
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.WebAPI.ResultRender.StateKeys">
            <summary>
            获取状态参数的所有键
            </summary>
        </member>
        <member name="M:NPiculet.WebAPI.ResultRender.StateGet(System.String)">
            <summary>
            移除状态参数
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:NPiculet.WebAPI.ResultRender.StateRemove(System.String)">
            <summary>
            移除状态参数
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:NPiculet.WebAPI.ResultRender.StateClear">
            <summary>
            清楚所有状态参数
            </summary>
        </member>
        <member name="M:NPiculet.WebAPI.ResultRender.Query``1(System.String,``0)">
            <summary>
            先获取 GET 传入的值，如果没有则尝试获取 POST 传入的值。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.WebAPI.ResultRender.Query(System.String)">
            <summary>
            获取参数
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.WebAPI.ResultRender.QueryString(System.String)">
            <summary>
            获取链接参数
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.WebAPI.ResultRender.QueryForm(System.String)">
            <summary>
            获取表单参数
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.WebAPI.ResultRender.Render``1(``0)">
            <summary>
            渲染并输出
            </summary>
            <param name="result">输入对象</param>
        </member>
        <member name="M:NPiculet.WebAPI.ResultRender.OutputProtoBuf``1(``0)">
            <summary>
            输出 photobuf 类型的结果
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
        </member>
        <member name="M:NPiculet.WebAPI.ResultRender.OutputContent(System.String)">
            <summary>
            输出内容
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:NPiculet.WebAPI.ResultRender.OutputXmlResult``1(``0)">
            <summary>
            输出 Xml 类型的结果
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
        </member>
        <member name="M:NPiculet.WebAPI.ResultRender.OutputTextResult(System.String)">
            <summary>
            输出 Text 类型的结果
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:NPiculet.WebAPI.ResultRender.OutputJsonResult``1(``0)">
            <summary>
            输出
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
        </member>
        <member name="P:NPiculet.WebAPI.ResultRender.Context">
            <summary>
            当前上下文
            </summary>
        </member>
        <member name="P:NPiculet.WebAPI.ResultRender.Format">
            <summary>
            返回结果格式
            </summary>
        </member>
        <member name="P:NPiculet.WebAPI.ResultRender.CrossDomain">
            <summary>
            是否跨越，默认不跨越
            </summary>
        </member>
        <member name="T:NPiculet.WebAPI.AuthorizationType">
            <summary>
            授权类型
            </summary>
        </member>
        <member name="T:NPiculet.WebAPI.ResultFormat">
            <summary>
            返回结果格式
            </summary>
        </member>
        <member name="F:NPiculet.WebAPI.ResultFormat.Text">
            <summary>
            将结果 ToString() 后输出
            </summary>
        </member>
        <member name="F:NPiculet.WebAPI.ResultFormat.Json">
            <summary>
            JavaScript Object Notation
            </summary>
        </member>
        <member name="F:NPiculet.WebAPI.ResultFormat.Xml">
            <summary>
            Extensible Markup Language
            </summary>
        </member>
        <member name="F:NPiculet.WebAPI.ResultFormat.ProtoBuf">
            <summary>
            Google Protocol Buffer
            </summary>
        </member>
        <member name="M:NPiculet.WebAPI.IWebAPI.Render(NPiculet.WebAPI.ResultRender)">
            <summary>
            渲染结果并输出
            </summary>
            <param name="render"></param>
        </member>
        <member name="P:NPiculet.WebAPI.IWebAPI.ModuleName">
            <summary>
            模块名称
            </summary>
        </member>
        <member name="P:NPiculet.WebAPI.IWebAPI.NeedAuthorize">
            <summary>
            是否需要授权验证，如果有设置 WebApiAuthorization 属性则优先考虑属性
            </summary>
            <returns></returns>
        </member>
        <member name="P:NPiculet.WebAPI.IWebAPI.AuthorizationType">
            <summary>
            授权类型
            </summary>
        </member>
        <member name="T:NPiculet.WebAPI.WebApiRouter">
            <summary>
            简单 WebAPI 路由器
            </summary>
        </member>
        <member name="F:NPiculet.WebAPI.WebApiRouter._cdict">
            <summary>
            并发缓存字典
            </summary>
        </member>
        <member name="M:NPiculet.WebAPI.WebApiRouter.Route(System.Web.HttpContext)">
            <summary>
            路由处理
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:NPiculet.WebAPI.WebApiRouter.InitRouterCache">
            <summary>
            初始化路由器缓存
            </summary>
        </member>
        <member name="T:NPiculet.WebControls.PaginationManager">
            <summary>
            分页文字及分页链接管理器，用于组合页码链接 Html 字符串，这里可以组合复杂的链接，如果只需要简单的方法请使用 PageManager 类。
            </summary>
        </member>
        <member name="M:NPiculet.WebControls.PaginationManager.#ctor(NPiculet.WebControls.PaginationManager.PaginationMode)">
            <summary>
            分页组合管理器。
            </summary>
            <param name="paginationMode"></param>
        </member>
        <member name="M:NPiculet.WebControls.PaginationManager.#ctor(System.Int32)">
            <summary>
            分页组合管理器。
            </summary>
            <param name="recordCount">总记录统计</param>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.CurrentPage">
            <summary> 当前页码，必填 </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.RecordCount">
            <summary> 统计记录数，必填 </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.PageSize">
            <summary> 分页大小 </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.TotalString">
            <summary> 统计描述，文字中参数：{0}当前页、{1}总页数、{2}总记录数 </summary>
        </member>
        <!-- 对于成员“F:NPiculet.WebControls.PaginationManager.RefererString”忽略有格式错误的 XML 注释 -->
        <member name="F:NPiculet.WebControls.PaginationManager.ShowTotalStringPosition">
            <summary> 统计描述的显示位置 </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.PageUrl">
            <summary> 页面地址 </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.PageUrlString">
            <summary> 跳转页链接，参数：{0}页面地址、{1}当前页码、{2}链接文字 </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.StaticNumber">
            <summary> 固定分隔页数 </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.AutoPrevNumber">
            <summary> 动态分隔前页数 </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.AutoNextNumber">
            <summary> 动态分隔后页数 </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.CurrentPageCss">
            <summary> 当前页码颜色 </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.PrevString">
            <summary> 前一页描述 </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.NextString">
            <summary> 后一页描述 </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.FirstString">
            <summary> 第一页描述 </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.LastString">
            <summary> 最后页描述 </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.PrevStaticString">
            <summary> 前一固定分隔描述 </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.NextStaticString">
            <summary> 后一固定分隔描述 </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.ShowEllipsis">
            <summary> 超出分隔范围的页码用省略号 </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.FixedPages">
            <summary> 动态分页时，显示页码数为 AutoPrevNumber + AutoNextNumber + 1 假设为 4 + 4 + 1，此项为 true 将增补显示页码到总和数 9，此项为 false 只会显示 AutoPrevNumber 或 AutoNextNumber 数 + 1 = 5 页 </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.ShowNoLinkText">
            <summary> 没有链接时是否显示跳转文字 </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.Mode">
            <summary>
            分页模式。
            </summary>
        </member>
        <member name="M:NPiculet.WebControls.PaginationManager.CreatePageItem(System.String,System.Boolean)">
            <summary>
            创建项
            </summary>
            <param name="text"></param>
            <param name="actived"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.WebControls.PaginationManager.CreatePages">
            <summary>
            生成页码
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.WebControls.PaginationManager.CreateCommonInfo">
            <summary>
            创建通用信息
            </summary>
        </member>
        <member name="M:NPiculet.WebControls.PaginationManager.CreateAllPages">
            <summary>
            生成全部页码
            </summary>
        </member>
        <member name="M:NPiculet.WebControls.PaginationManager.CreateAutoPages">
            <summary>
            创建自动扩展的页码
            </summary>
        </member>
        <member name="M:NPiculet.WebControls.PaginationManager.CreateInfos">
            <summary>
            创建自动扩展的页码信息。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.WebControls.PaginationManager.CreateStaticPages">
            <summary>
            创建分段显示的页码。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.WebControls.PaginationManager.Show">
            <summary>
            输出生成的页码。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.WebControls.PaginationManager.GetPageUrl(System.Int32,System.String,System.Boolean)">
            <summary>
            获取首页链接字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="T:NPiculet.WebControls.PaginationManager.TotalStringPosition">
            <summary>
            统计字符串定位。
            </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.TotalStringPosition.Front">
            <summary>
            定位在页码前。
            </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.TotalStringPosition.Back">
            <summary>
            定位在页码后。
            </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.TotalStringPosition.None">
            <summary>
            不产生统计字符串。
            </summary>
        </member>
        <member name="T:NPiculet.WebControls.PaginationManager.PaginationMode">
            <summary>
            分页模式。
            </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.PaginationMode.All">
            <summary>
            全部页码展示。
            </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.PaginationMode.Dynamic">
            <summary>
            动态页码展示，当前页码是显示在中间，例如：当前是第5页，分隔为3页，那么就会显示2 3 4 5 6 7 8页。
            </summary>
        </member>
        <member name="F:NPiculet.WebControls.PaginationManager.PaginationMode.Static">
            <summary>
            静态页码展示，页码会固定显示一个区间，比如：1-10页，直到跳转到11页才会显示11-20页。
            </summary>
        </member>
        <member name="T:NPiculet.WebControls.NodeSelectMode">
            <summary>
            节点选择模式
            </summary>
        </member>
        <member name="F:NPiculet.WebControls.NodeSelectMode.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:NPiculet.WebControls.NodeSelectMode.CheckBox">
            <summary>
            多选框
            </summary>
        </member>
        <member name="F:NPiculet.WebControls.NodeSelectMode.OnlyLeafCheckBox">
            <summary>
            仅子节点多选框
            </summary>
        </member>
        <member name="M:NPiculet.WebControls.JTreeView.SetDataSource(System.Data.DataTable,System.Int32,System.Int32)">
            <summary>
            数据源
            </summary>
        </member>
        <member name="M:NPiculet.WebControls.JTreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染开始标签
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:NPiculet.WebControls.JTreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染结束标签
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:NPiculet.WebControls.JTreeView.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染所有控件内容
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:NPiculet.WebControls.JTreeView.RenderBody(System.Text.StringBuilder)">
            <summary>
            渲染表体
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:NPiculet.WebControls.JTreeView.AnalyzeDynamicBody(NPiculet.WebControls.JTreeNodeCollection,System.Web.UI.IHierarchicalEnumerable)">
            <summary>
            解析动态内容
            </summary>
            <param name="nodes"></param>
            <param name="data">分层集合</param>
        </member>
        <member name="M:NPiculet.WebControls.JTreeView.AnalyzeDynamicBody(NPiculet.WebControls.JTreeNodeCollection,System.Data.DataTable,System.Data.DataTable)">
            <summary>
            解析动态内容
            </summary>
            <param name="nodes"></param>
            <param name="source">源数据表</param>
            <param name="current"></param>
        </member>
        <member name="P:NPiculet.WebControls.JTreeView.CssClass">
            <summary>
            基础式样
            </summary>
        </member>
        <member name="P:NPiculet.WebControls.JTreeView.Fit">
            <summary>
            是否自动扩展高度及宽度
            </summary>
        </member>
        <member name="P:NPiculet.WebControls.JTreeView.NodeSelectMode">
            <summary>
            节点选择模式
            </summary>
        </member>
        <member name="P:NPiculet.WebControls.JTreeView.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="M:NPiculet.WebControls.JGridView.SetDataSource(System.Data.DataTable,System.Int32,System.Int32)">
            <summary>
            数据源
            </summary>
        </member>
        <member name="M:NPiculet.WebControls.JGridView.AutoColumns">
            <summary>
            自动生成列头
            </summary>
        </member>
        <member name="M:NPiculet.WebControls.JGridView.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染开始标签
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:NPiculet.WebControls.JGridView.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染结束标签
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:NPiculet.WebControls.JGridView.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染所有控件内容
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:NPiculet.WebControls.JGridView.RenderHeader(NPiculet.WebControls.JDataFieldCollection,System.Text.StringBuilder)">
            <summary>
            渲染表头
            </summary>
            <param name="columns"></param>
            <param name="writer"></param>
        </member>
        <member name="M:NPiculet.WebControls.JGridView.RenderBody(NPiculet.WebControls.JDataFieldCollection,System.Text.StringBuilder)">
            <summary>
            渲染表体
            </summary>
            <param name="columns"></param>
            <param name="writer"></param>
        </member>
        <member name="M:NPiculet.WebControls.JGridView.RenderFooter(NPiculet.WebControls.JDataFieldCollection,System.Text.StringBuilder)">
            <summary>
            渲染表尾
            </summary>
            <param name="columns"></param>
            <param name="writer"></param>
        </member>
        <member name="P:NPiculet.WebControls.JGridView.Title">
            <summary>
            表格标题
            </summary>
        </member>
        <member name="P:NPiculet.WebControls.JGridView.Fit">
            <summary>
            是否自动扩展高度及宽度
            </summary>
        </member>
        <member name="P:NPiculet.WebControls.JGridView.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="T:NPiculet.WebControls.JHyperLinkField">
            <summary>
            超链接字段
            </summary>
        </member>
        <member name="M:NPiculet.WebControls.JDataField.RenderContent(System.Data.DataRowView)">
            <summary>
            渲染内容，并接受参数
            </summary>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.WebControls.JDataField.RenderFormatString(System.Data.DataRowView,System.String,System.String)">
            <summary>
            渲染格式化的内容
            </summary>
            <param name="dr"></param>
            <param name="formatString"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.WebControls.JHyperLinkField.RenderContent(System.Data.DataRowView)">
            <summary>
            超链接字段，拥有两个参数：链接地址，显示文字
            </summary>
            <param name="dr">链接地址，显示文字</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.WebControls.JTreeNode.RenderFormatString(System.Data.DataRowView,System.String,System.String)">
            <summary>
            渲染格式化的内容
            </summary>
            <param name="dr"></param>
            <param name="formatString"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.WebControls.JBoundField">
            <summary>
            绑定文本字段
            </summary>
        </member>
        <member name="M:NPiculet.WebControls.JBoundField.RenderContent(System.Data.DataRowView)">
            <summary>
            绑定文本字段，拥有一个参数：显示文字
            </summary>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.WebControls.NPager.GetPageCount">
            <summary>
            获取页码统计
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.WebControls.NPager.GetPrevPage">
            <summary>
            获取前一页码
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.WebControls.NPager.GetNextPage">
            <summary>
            获取后一页码
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.WebControls.NPager.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染内容
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:NPiculet.WebControls.NPager.RenderPagination(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染分页
            </summary>
            <param name="output"></param>
        </member>
        <member name="P:NPiculet.WebControls.NPager.CurrentPage">
            <summary>
            当前页码
            </summary>
        </member>
        <member name="P:NPiculet.WebControls.NPager.PageSize">
            <summary>
            分页大小
            </summary>
        </member>
        <member name="P:NPiculet.WebControls.NPager.RecordCount">
            <summary>
            记录数
            </summary>
        </member>
        <member name="M:NPiculet.WebControls.JComboBox.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染开始标签
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:NPiculet.WebControls.JComboBox.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染结束标签
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:NPiculet.WebControls.JComboBox.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            渲染所有控件内容
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:NPiculet.WebControls.JComboBox.RenderBody(System.Text.StringBuilder)">
            <summary>
            渲染控件
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:System.Web.UI.PageExtension.Alert(System.Web.UI.Page,System.String)">
            <summary>
            弹出提示框。
            </summary>
            <param name="page"></param>
            <param name="msg"></param>
        </member>
        <member name="M:System.Web.UI.PageExtension.Alert(System.Web.UI.UserControl,System.String)">
            <summary>
            弹出提示框。
            </summary>
            <param name="userControl"></param>
            <param name="msg"></param>
        </member>
        <member name="M:System.Web.UI.PageExtension.JavaSrcipt(System.Web.UI.Page,System.String)">
            <summary>
            执行 Javascript 脚本。
            </summary>
            <param name="page"></param>
            <param name="js"></param>
        </member>
        <member name="M:System.Web.UI.PageExtension.JavaSrcipt(System.Web.UI.UserControl,System.String)">
            <summary>
            执行 Javascript 脚本。
            </summary>
            <param name="userControl"></param>
            <param name="js"></param>
        </member>
        <member name="M:System.Web.UI.PageExtension.SetAttribute(System.Web.UI.WebControls.WebControl,System.String,System.String)">
            <summary>
            添加属性
            </summary>
            <param name="control"></param>
            <param name="sKey"></param>
            <param name="strValue"></param>
        </member>
        <member name="M:NPiculet.Toolkit.WebParmKit.GetRequestString``1(System.String,``0)">
            <summary>
            获取 GET 方式传入的值，并转换为指定类型。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.WebParmKit.GetFormValue``1(System.String,``0)">
            <summary>
            获取 POST 方式传入的值，并转换为指定类型。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.WebParmKit.GetRequestStringArray">
            <summary>
            获取 GET 方法传入的值数组。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.WebParmKit.GetFormArray">
            <summary>
            获取 POST 方法传入的值数组。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.WebParmKit.GetQuery``1(System.String,``0)">
            <summary>
            先获取 GET 传入的值，如果没有则尝试获取 POST 传入的值。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.WebParmKit.GetQueryArray">
            <summary>
            同时获取 GET 和 POST 方法传入的值数组。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.GridViewKit.TotalTableColumns(System.Web.UI.WebControls.GridViewRow,System.Int32[],System.String)">
            <summary>
            统计表格列含有数字的单元格。
            </summary>
            <param name="row">表格行</param>
            <param name="notTotalIndex">不统计的列索引</param>
            <param name="resultFormat">输出数字的格式</param>
        </member>
        <member name="M:NPiculet.Toolkit.GridViewKit.TotalTableColumns(System.Web.UI.WebControls.GridViewRow,System.Int32[])">
            <summary>
            统计表格列含有数字的单元格。
            </summary>
            <param name="row">表格行</param>
            <param name="notTotalIndex">不统计的列索引</param>
        </member>
        <member name="M:NPiculet.Toolkit.GridViewKit.TotalTableRows(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Int32[],System.String[])">
            <summary>
            统计表格行中含有数据的单元格。
            </summary>
            <param name="row">表格行</param>
            <param name="resultColumnIndex">统计结果输出的列索引</param>
            <param name="notTotalIndex">不统计的列索引</param>
            <param name="containNames">只统计包含的列索引，如果设置为空字符将统计全部列</param>
        </member>
        <member name="M:NPiculet.Toolkit.GridViewKit.MergeRow(System.Web.UI.WebControls.GridView,System.Int32,System.Int32[])">
            <summary>
            合并 GridView 的纵向值相同的单元格
            </summary>
            <param name="gv">数据表控件</param>
            <param name="mergerColumnIndex">需要合并的列索引</param>
            <param name="compareColumnIndexs">实际比较值的列索引</param>
        </member>
        <member name="M:NPiculet.Toolkit.GridViewKit.MergeRows(System.Web.UI.WebControls.GridView)">
            <summary>
            合并 GridView 的纵向值相同的单元格
            </summary>
            <param name="gridView"></param>
        </member>
        <member name="M:NPiculet.Toolkit.GridViewKit.ClearZero(System.Web.UI.WebControls.GridView)">
            <summary>
            如果单元格中数值为0，则清除显示。
            </summary>
            <param name="gv">GridView控件</param>
        </member>
        <member name="M:NPiculet.Toolkit.GridViewKit.ClearValue(System.Web.UI.WebControls.GridView,System.String)">
            <summary>
            如果单元格中的值和对比值相同，则清除显示。
            </summary>
            <param name="gv">GridView控件</param>
            <param name="val">对比值</param>
        </member>
        <member name="T:NPiculet.Toolkit.TreeViewKit">
            <summary>
            树控件处理类，处理树控件中的通用事务。
            </summary>
        </member>
        <member name="M:NPiculet.Toolkit.TreeViewKit.BuildTree(System.Web.UI.WebControls.TreeView,System.Web.UI.WebControls.TreeNode,System.Data.DataView,System.String,System.String,System.String,System.String)">
            <summary>
            建立树控件。
            </summary>
            <param name="tree">树控件</param>
            <param name="node">当前节点</param>
            <param name="dv">数据视图</param>
            <param name="text">节点文本字段</param>
            <param name="val">节点值字段</param>
            <param name="filterString">过滤规则</param>
            <param name="parentVal">父节点值</param>
        </member>
        <member name="M:NPiculet.Toolkit.TreeViewKit.BuildTree(System.Web.UI.WebControls.TreeView,System.Web.UI.WebControls.TreeNode,System.Data.DataTable,System.String,System.String,System.String,System.String)">
            <summary>
            建立树控件。
            </summary>
            <param name="tree">树控件</param>
            <param name="node">当前节点</param>
            <param name="dt">数据表</param>
            <param name="text">节点文本字段</param>
            <param name="val">节点值字段</param>
            <param name="filterString">过滤规则</param>
            <param name="parentVal">父节点值</param>
        </member>
        <member name="M:NPiculet.Toolkit.TreeViewKit.ExpandNode(System.Web.UI.WebControls.TreeView,System.String)">
            <summary>
            展开节点。
            </summary>
            <param name="tree">树控件</param>
            <param name="valuePath">值路径</param>
        </member>
        <member name="M:NPiculet.Toolkit.TreeViewKit.GetTreeValues(System.Web.UI.WebControls.TreeNodeCollection,System.Collections.Generic.List{System.Web.UI.WebControls.TreeNode})">
            <summary>
            获取树控件中选中的节点，并将节点填充到传入的 results 列表中。
            </summary>
            <param name="nodes">节点集</param>
            <param name="results">结果列表</param>
        </member>
        <member name="M:NPiculet.Toolkit.TreeViewKit.GetTreeValues(System.Web.UI.WebControls.TreeView,System.Collections.Generic.List{System.Web.UI.WebControls.TreeNode})">
            <summary>
            获取树控件中选中的节点，并将节点填充到传入的 results 列表中。
            </summary>
            <param name="tree">树控件</param>
            <param name="results">结果列表</param>
        </member>
        <member name="T:NPiculet.Toolkit.BindKit">
            <summary>
            绑定数据类，动态将数据绑定到各种控件的通用方法。
            </summary>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.BindToDataControl(System.Object,System.Data.DataView)">
            <summary>
            从数据视图绑定数据到数据列表控件。
            </summary>
            <param name="obj">列表控件</param>
            <param name="dv">数据源</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.BindToDataControl(System.Object,System.Data.DataTable)">
            <summary>
            从数据表绑定数据到数据列表控件。
            </summary>
            <param name="obj">列表控件</param>
            <param name="dt">数据源</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.BindToDataControl(System.Object,System.Data.IDataReader)">
            <summary>
            从 IDataReader 绑定数据到数据列表控件。
            </summary>
            <param name="obj">列表控件</param>
            <param name="dr">数据源</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.BindToDataControl(System.Object,System.Collections.IList)">
            <summary>
            从 IDataReader 绑定数据到数据列表控件。
            </summary>
            <param name="obj">列表控件</param>
            <param name="list">数据源</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.BindToListControl(System.Web.UI.WebControls.ListControl,System.Data.DataView,System.String,System.String)">
            <summary>
            从数据视图绑定数据到清单控件。
            </summary>
            <param name="lc">清单控件</param>
            <param name="dv">数据源</param>
            <param name="textField">文本字段</param>
            <param name="valueField">值字段</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.BindToListControl(System.Web.UI.WebControls.ListControl,System.Data.DataTable,System.String,System.String)">
            <summary>
            从数据表绑定数据到清单控件。
            </summary>
            <param name="lc">清单控件</param>
            <param name="dt">数据源</param>
            <param name="textField">文本字段</param>
            <param name="valueField">值字段</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.BindToListControl(System.Web.UI.WebControls.ListControl,System.Data.IDataReader,System.String,System.String)">
            <summary>
            从 IDataReader 绑定数据到清单控件。
            </summary>
            <param name="lc">清单控件</param>
            <param name="dr">数据源</param>
            <param name="textField">文本字段</param>
            <param name="valueField">值字段</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.BindToListControl(System.Web.UI.WebControls.ListControl,System.Collections.IList,System.String,System.String)">
            <summary>
            从数据视图绑定数据到清单控件。
            </summary>
            <param name="lc">清单控件</param>
            <param name="list">数据源</param>
            <param name="textField">文本字段</param>
            <param name="valueField">值字段</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.BindToListControl``1(System.Web.UI.WebControls.ListControl,System.Linq.IQueryable{``0},System.String,System.String)">
            <summary>
            从数据视图绑定数据到清单控件。
            </summary>
            <param name="lc">清单控件</param>
            <param name="query">数据源</param>
            <param name="textField">文本字段</param>
            <param name="valueField">值字段</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.SelectItemInSingleListControl(System.Web.UI.WebControls.ListControl,System.String,System.Boolean)">
            <summary>
            根据值或文字，选中清单控件的单项。
            </summary>
            <param name="lc">清单控件</param>
            <param name="val">值</param>
            <param name="findByValue">是否根据值来搜索，true搜索值，false搜索文字</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.SelectItemInMultipleListControl(System.Web.UI.WebControls.ListControl,System.String[],System.Boolean)">
            <summary>
            根据值或文字，选中清单控件的多项。
            </summary>
            <param name="lc">清单控件</param>
            <param name="vals">值</param>
            <param name="findByValue">是否根据值来搜索，true搜索值，false搜索文字</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.BindOnClientClick(System.Web.UI.Control,System.String,System.String)">
            <summary>
            绑定客户端单击事件到按钮或控件中包含的按钮。
            </summary>
            <param name="control">对象</param>
            <param name="commandName">按钮指令名称</param>
            <param name="javascript">JavaScript 脚本</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.BindOnClientClick(System.Web.UI.Control,System.String)">
            <summary>
            绑定客户端单击事件到按钮或控件中包含的按钮。
            </summary>
            <param name="control">对象</param>
            <param name="javascript">JavaScript 脚本</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.BindOnClientClickToButton(System.Web.UI.WebControls.IButtonControl,System.String,System.String)">
            <summary>
            绑定客户端单击事件到控件。
            </summary>
            <param name="btn">按钮控件</param>
            <param name="commandName">指令名称</param>
            <param name="javascript">JavaScript 脚本</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.BindOnClientClickToButton(System.Web.UI.WebControls.IButtonControl,System.String)">
            <summary>
            绑定客户端单击事件到控件。
            </summary>
            <param name="btn">按钮控件</param>
            <param name="javascript">JavaScript 脚本</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.BindOnClientClickToHtmlControl(System.Web.UI.HtmlControls.HtmlControl,System.String,System.String)">
            <summary>
            绑定客户端单击事件到 Html 控件。
            </summary>
            <param name="control">控件</param>
            <param name="controlId">控件 ID</param>
            <param name="javascript">JavaScript 脚本</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.BindOnClientClickToWebControl(System.Web.UI.WebControls.WebControl,System.String,System.String)">
            <summary>
            绑定客户端单击事件到 Web 控件。
            </summary>
            <param name="control">控件</param>
            <param name="controlId">控件 ID</param>
            <param name="javascript">JavaScript 脚本</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.BindOnClientClickToHtmlControl(System.Web.UI.HtmlControls.HtmlControl,System.String)">
            <summary>
            绑定客户端单击事件到 Html 控件。
            </summary>
            <param name="control">控件</param>
            <param name="javascript">JavaScript 脚本</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.BindModelToContainer(System.Web.UI.Control,System.Object)">
            <summary>
            将数据模型绑定到容器中的控件。
            </summary>
            <param name="container">容器</param>
            <param name="model">数据模型</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.BindPropertyToControl(System.Web.UI.Control,System.Object,System.Reflection.PropertyInfo)">
            <summary>
            将数据模型的指定属性中的值绑定到控件。
            </summary>
            <param name="container">容器</param>
            <param name="model">数据模型</param>
            <param name="info">属性</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.FillModelFromContainer(System.Web.UI.Control,System.Object)">
            <summary>
            将容器中的控件数据填充到数据模型。
            </summary>
            <param name="container">容器</param>
            <param name="model">数据模型</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.ConvertValue(System.Object,System.Type)">
            <summary>
            转换当前模型中子项的值。
            </summary>
            <param name="val">需要转换类型的值</param>
            <param name="type">数据类型</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.GetControlValue(System.Web.UI.Control,System.Type)">
            <summary>
            获取空间的值。
            </summary>
            <param name="control">控件</param>
            <param name="type">值类型</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.FillModelFromContainer``1(System.Web.UI.Control)">
            <summary>
            将容器中的控件数据填充到数据模型。
            </summary>
            <param name="namingContainer">容器</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.FillModelFromContainer(System.Web.UI.Control,System.Type)">
            <summary>
            将容器中的控件数据填充到数据模型。
            </summary>
            <param name="namingContainer">容器</param>
        </member>
        <member name="M:NPiculet.Toolkit.BindKit.BindDataToContainer(System.Web.UI.Control,System.Data.DataTable)">
            <summary>
            将数据模型绑定到容器中的控件。
            </summary>
            <param name="container">容器</param>
            <param name="dt">数据表</param>
        </member>
        <member name="T:NPiculet.Toolkit.CacheKit">
            <summary>
            缓存管理器。
            </summary>
        </member>
        <member name="M:NPiculet.Toolkit.CacheKit.Remove(System.String)">
            <summary>
            移除缓存。
            </summary>
            <param name="cacheKey">缓存的索引键</param>
        </member>
        <member name="M:NPiculet.Toolkit.CacheKit.IsExist(System.String)">
            <summary>
            检查缓存是否存在。
            </summary>
            <param name="cacheKey">缓存的索引键</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:NPiculet.Toolkit.CacheKit.SaveCache(System.String,System.Object,System.TimeSpan,System.Web.Caching.CacheItemPriority)">
            <summary>
            设置缓存。
            </summary>
            <param name="cacheKey">缓存的索引键</param>
            <param name="obj">储存的对象</param>
            <param name="expirySpan">过期间隔</param>
            <param name="cacheItemPriority">缓存回收的优先级</param>
        </member>
        <member name="M:NPiculet.Toolkit.CacheKit.SetCahceObject(System.String,System.Object)">
            <summary>
            设置缓存。
            </summary>
            <param name="cacheKey">缓存的索引键</param>
            <param name="obj">对象</param>
        </member>
        <member name="M:NPiculet.Toolkit.CacheKit.SetCahceObject(System.String,System.Object,System.TimeSpan)">
            <summary>
            设置缓存。
            </summary>
            <param name="cacheKey">缓存的索引键</param>
            <param name="obj">对象</param>
            <param name="expirySpan">过期间隔</param>
        </member>
        <member name="M:NPiculet.Toolkit.CacheKit.SetCahceObject(System.String,System.Object,System.TimeSpan,System.Web.Caching.CacheItemPriority)">
            <summary>
            设置缓存。
            </summary>
            <param name="cacheKey">缓存的索引键</param>
            <param name="obj">对象</param>
            <param name="expirySpan">过期间隔</param>
            <param name="cacheItemPriority">缓存回收的优先级</param>
        </member>
        <member name="M:NPiculet.Toolkit.CacheKit.SetCahceObject(System.String,System.Object,System.Web.Caching.CacheItemPriority)">
            <summary>
            设置缓存。
            </summary>
            <param name="cacheKey">缓存的索引键</param>
            <param name="obj">对象</param>
            <param name="cacheItemPriority">缓存回收的优先级</param>
        </member>
        <member name="M:NPiculet.Toolkit.CacheKit.GetCahceDataTable(System.String)">
            <summary>
            获取缓存的数据表。
            </summary>
            <param name="cacheKey">缓存的索引键</param>
            <returns>数据表</returns>
        </member>
        <member name="M:NPiculet.Toolkit.CacheKit.GetCahceObject(System.String)">
            <summary>
            获取缓存的对象。
            </summary>
            <param name="cacheKey">缓存的索引键</param>
            <returns>数据表</returns>
        </member>
        <member name="M:NPiculet.Toolkit.CacheKit.GetCahceHashtable(System.String)">
            <summary>
            获取缓存希哈表。
            </summary>
            <param name="cacheKey">缓存的索引键</param>
            <returns>希哈表</returns>
        </member>
        <member name="M:NPiculet.Toolkit.WebClientKit.GetSimpleIP">
            <summary> 
            取得客戶端简单主机地址 
            </summary> 
        </member>
        <member name="M:NPiculet.Toolkit.WebClientKit.GetClientIPv4">
            <summary> 
            取得客戶端主机 IPv4 地址 
            </summary> 
            <returns></returns> 
        </member>
        <member name="M:NPiculet.Toolkit.WebClientKit.GetClientIP">
            <summary>
            取得可穿透代理的客戶端主机地址
            </summary>
        </member>
        <member name="M:NPiculet.Toolkit.WebClientKit.IsIPv4(System.String)">
            <summary>
            判断是否是IPv4地址
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.FileKit.SaveFile(System.Web.HttpPostedFile)">
            <summary>
            保存文件
            </summary>
            <param name="hpf"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.FileKit.IsImage(System.String)">
            <summary>
            是否是图片
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.FileKit.SaveThumbnailImage(System.Web.HttpPostedFile,System.Int32,System.Int32)">
            <summary>
            保存缩略图
            </summary>
            <param name="hpf"></param>
            <param name="w"></param>
            <param name="h"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.FileKit.SaveZoomImage(System.Web.HttpPostedFile,System.Int32,System.Int32)">
            <summary>
            保存缩略图
            </summary>
            <param name="hpf"></param>
            <param name="w"></param>
            <param name="h"></param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.FileKit.GetNewFilePath(System.String,System.String)">
            <summary>
            获取新文件路径
            </summary>
            <param name="dirName"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="T:NPiculet.Toolkit.SessionKit">
            <summary>
            Session 状态存取类。
            </summary>
        </member>
        <member name="M:NPiculet.Toolkit.SessionKit.SetSession(System.String,System.String,System.Int32)">
            <summary>
            储存 Session 值。
            </summary>
            <param name="sessionName">Session 名称</param>
            <param name="sessionValue">Session 值</param>
            <param name="expiryTime">过期时间（分钟）</param>
        </member>
        <member name="M:NPiculet.Toolkit.SessionKit.SetSession(System.String,System.String)">
            <summary>
            储存 Session 值。
            </summary>
            <param name="sessionName">Session 名称</param>
            <param name="sessionValue">Session 值</param>
        </member>
        <member name="M:NPiculet.Toolkit.SessionKit.GetSession(System.String)">
            <summary>
            获取 Session 值，如果没有值则返回 String.Empty 值。
            </summary>
            <param name="sessionName">Session 名称</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.SessionKit.CheckSession(System.String,System.String)">
            <summary>
            检查 Cookie 值是否相等。
            </summary>
            <param name="sessionName">Session 名称</param>
            <param name="chkValue">比较值</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.SessionKit.CheckSession(System.String)">
            <summary>
            检查 Cookie 值是否存在。
            </summary>
            <param name="sessionName">Session 名称</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.SessionKit.RemoveSession(System.String)">
            <summary>
            清除 Session 值。
            </summary>
            <param name="sessionName">Session 名称</param>
        </member>
        <member name="M:NPiculet.Toolkit.SessionKit.RemoveAll">
            <summary>
            移除全部 Session 值。
            </summary>
        </member>
        <member name="T:NPiculet.Toolkit.CookiesKit">
            <summary>
            Cookies 状态存取类。
            </summary>
        </member>
        <member name="M:NPiculet.Toolkit.CookiesKit.GetCurrentCookies(System.String)">
            <summary>
            获取当前 Cookie 集合，如果没有则初始化一个。
            </summary>
            <param name="cookieCollectionName">Cookie 集合名称</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.CookiesKit.GetCurrentCookies">
            <summary>
            获取当前 Cookie 集合，如果没有则初始化一个。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.CookiesKit.GetExpiryDateTime">
            <summary>
            获取过期时间。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.CookiesKit.SetCookie(System.String,System.String,System.String,System.Int32)">
            <summary>
            储存 Cookie 值。
            </summary>
            <param name="cookieCollectionName">Cookie 集合名称</param>
            <param name="cookieName">Cookie 名称</param>
            <param name="cookieValue">Cookie 值</param>
            <param name="expiryTime">过期时间（分钟）</param>
        </member>
        <member name="M:NPiculet.Toolkit.CookiesKit.SetCookie(System.String,System.String,System.Int32)">
            <summary>
            储存 Cookie 值。
            </summary>
            <param name="cookieName">Cookie 名称</param>
            <param name="cookieValue">Cookie 值</param>
            <param name="expiryTime">过期时间（分钟）</param>
        </member>
        <member name="M:NPiculet.Toolkit.CookiesKit.SetCookie(System.String,System.String)">
            <summary>
            储存 Cookie 值，默认值可配置 web.config 文件中的 CookiesExpiryDateTime 参数，单位（分钟）。
            </summary>
            <param name="cookieName">Cookie 名称</param>
            <param name="cookieValue">Cookie 值</param>
        </member>
        <member name="M:NPiculet.Toolkit.CookiesKit.GetCookie(System.String,System.String,System.String)">
            <summary>
            获取 Cookie 值。
            </summary>
            <param name="cookieCollectionName">Cookie 集合名称</param>
            <param name="cookieName">Cookie 名称</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.CookiesKit.GetCookie(System.String,System.String)">
            <summary>
            获取 Cookie 值。
            </summary>
            <param name="cookieName">Cookie 名称</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.CookiesKit.GetCookie(System.String)">
            <summary>
            取得 Cookie 值，如果没有值则返回 String.Empty 值。
            </summary>
            <param name="cookieName">Cookie 名称</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.CookiesKit.CheckCookie(System.String,System.String,System.String)">
            <summary>
            检查 Cookie 值是否相等。
            </summary>
            <param name="cookieCollectionName">Cookie 集合名称</param>
            <param name="cookieName">Cookie 名称</param>
            <param name="chkValue">比较值</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.CookiesKit.CheckCookie(System.String,System.String)">
            <summary>
            检查 Cookie 值是否相等。
            </summary>
            <param name="cookieName">Cookie 名称</param>
            <param name="chkValue">比较值</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.CookiesKit.CheckCookie(System.String)">
            <summary>
            检查 Cookie 值是否存在。
            </summary>
            <param name="cookieName">Cookie 名称</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.CookiesKit.RefreshCookie(System.String,System.Int32)">
            <summary>
            刷新 Cookie 状态。
            </summary>
            <param name="cookieCollectionName">Cookie 集合名称</param>
            <param name="expiryTime">过期时间（分钟）</param>
        </member>
        <member name="M:NPiculet.Toolkit.CookiesKit.RefreshCookie(System.Int32)">
            <summary>
            刷新 Cookie 状态。
            </summary>
            <param name="expiryTime">过期时间（分钟）</param>
        </member>
        <member name="M:NPiculet.Toolkit.CookiesKit.RefreshCookie">
            <summary>
            刷新 Cookie 状态，按默认值重置过期时间。
            </summary>
        </member>
        <member name="M:NPiculet.Toolkit.CookiesKit.RemoveCookie(System.String,System.String)">
            <summary>
            清除 Cookie 值。
            </summary>
            <param name="cookieCollectionName">Cookie 集合名称</param>
            <param name="cookieName"></param>
        </member>
        <member name="M:NPiculet.Toolkit.CookiesKit.RemoveCookie(System.String)">
            <summary>
            清除 Cookie 值。
            </summary>
            <param name="cookieName"></param>
        </member>
        <member name="M:NPiculet.Toolkit.CookiesKit.RemoveAll(System.String)">
            <summary>
            移除全部 Cookie 值。
            </summary>
            <param name="cookieCollectionName">Cookie 集合名称</param>
        </member>
        <member name="M:NPiculet.Toolkit.CookiesKit.RemoveAll">
            <summary>
            移除全部 Cookie 值。
            </summary>
        </member>
        <member name="T:NPiculet.Toolkit.StatusManager">
            <summary>
            状态管理器。
            </summary>
        </member>
        <member name="M:NPiculet.Toolkit.StatusManager.GetCurrentMode">
            <summary>
            获取当前存储模式。
            </summary>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StatusManager.CheckStatus(System.String)">
            <summary>
            检查状态值。
            </summary>
            <param name="statusName">状态名称</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StatusManager.CheckStatus(System.String,System.String)">
            <summary>
            比较状态值。
            </summary>
            <param name="statusName">状态名称</param>
            <param name="chkValue">比较值</param>
            <returns></returns>
        </member>
        <member name="M:NPiculet.Toolkit.StatusManager.SetStatus(System.String,System.String)">
            <summary>
            设置状态值。
            </summary>
            <param name="statusName">状态名称</param>
            <param name="val">状态值</param>
        </member>
        <member name="M:NPiculet.Toolkit.StatusManager.SetStatus(System.String,System.String,System.Int32)">
            <summary>
            设置状态值，并设置状态过期时间。
            </summary>
            <param name="statusName">状态名称</param>
            <param name="val">状态值</param>
            <param name="expiryTime">过期时间（分钟）</param>
        </member>
        <member name="M:NPiculet.Toolkit.StatusManager.GetStatus(System.String)">
            <summary>
            获取登陆状态。
            </summary>
            <param name="statusName">状态名称</param>
            <returns>状态值</returns>
        </member>
        <member name="M:NPiculet.Toolkit.StatusManager.RefreshStatus">
            <summary>
            刷新状态，使其过期时间重置。
            </summary>
        </member>
        <member name="M:NPiculet.Toolkit.StatusManager.Remove(System.String)">
            <summary>
            移除指定状态。
            </summary>
            <param name="statusName">状态名称</param>
        </member>
        <member name="M:NPiculet.Toolkit.StatusManager.RemoveAll">
            <summary>
            销毁所有状态。
            </summary>
        </member>
        <member name="T:NPiculet.Toolkit.StatusManager.StatusMode">
            <summary>
            状态存储模式。
            </summary>
        </member>
    </members>
</doc>
